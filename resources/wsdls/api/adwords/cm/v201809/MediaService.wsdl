<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated file, do not edit -->
<!-- Copyright 2021 Google Inc. All Rights Reserved -->
<wsdl:definitions
  targetNamespace="https://adwords.google.com/api/adwords/cm/v201809"
  xmlns:tns="https://adwords.google.com/api/adwords/cm/v201809"
  xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
  xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <wsdl:types>
    <schema elementFormDefault="qualified" jaxb:version="1.0"
      targetNamespace="https://adwords.google.com/api/adwords/cm/v201809"
      xmlns="http://www.w3.org/2001/XMLSchema"
      xmlns:jaxb="http://java.sun.com/xml/ns/jaxb" xmlns:tns="https://adwords.google.com/api/adwords/cm/v201809">
      <annotation>
        <appinfo>
          <jaxb:globalBindings typesafeEnumMaxMembers="999999"/>
        </appinfo>
      </annotation>
      <complexType abstract="true" name="ApiError">
        <annotation>
          <documentation>
            The API error base class that provides details about an error that occurred
            while processing a service request.
            
            &lt;p&gt;The OGNL field path is provided for parsers to identify the request data
            element that may have caused the error.&lt;/p&gt;
          </documentation>
        </annotation>
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="fieldPath" type="xsd:string">
            <annotation>
              <documentation>
                The OGNL field path to identify cause of error.
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="unbounded" minOccurs="0"
            name="fieldPathElements" type="tns:FieldPathElement">
            <annotation>
              <documentation>
                A parsed copy of the field path. For example, the field path "operations[1].operand"
                corresponds to this list: {FieldPathElement(field = "operations", index = 1),
                FieldPathElement(field = "operand", index = null)}.
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="1" minOccurs="0" name="trigger" type="xsd:string">
            <annotation>
              <documentation>
                The data that caused the error.
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="1" minOccurs="0" name="errorString" type="xsd:string">
            <annotation>
              <documentation>
                A simple string representation of the error and reason.
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="1" minOccurs="0" name="ApiError.Type" type="xsd:string">
            <annotation>
              <documentation>
                Indicates that this instance is a subtype of ApiError.
                Although this field is returned in the response, it is ignored on input
                and cannot be selected. Specify xsi:type instead.
              </documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="ApiException">
        <annotation>
          <documentation>
            Exception class for holding a list of service errors.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApplicationException">
            <sequence>
              <element maxOccurs="unbounded" minOccurs="0" name="errors" type="tns:ApiError">
                <annotation>
                  <documentation>
                    List of errors.
                  </documentation>
                </annotation>
              </element>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="ApplicationException">
        <annotation>
          <documentation>
            Base class for exceptions.
          </documentation>
        </annotation>
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="message" type="xsd:string">
            <annotation>
              <documentation>
                Error message.
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="1" minOccurs="0"
            name="ApplicationException.Type" type="xsd:string">
            <annotation>
              <documentation>
                Indicates that this instance is a subtype of ApplicationException.
                Although this field is returned in the response, it is ignored on input
                and cannot be selected. Specify xsi:type instead.
              </documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="Audio">
        <annotation>
          <documentation>
            Encapsulates an Audio media identified by a MediaId.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:Media">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="durationMillis" type="xsd:long">
                <annotation>
                  <documentation>
                    The duration of the associated audio, in milliseconds.
                    &lt;span class="constraint Selectable"&gt;This field can be selected using the value "DurationMillis".&lt;/span&gt;&lt;span class="constraint Filterable"&gt;This field can be filtered on.&lt;/span&gt;
                  </documentation>
                </annotation>
              </element>
              <element maxOccurs="1" minOccurs="0" name="streamingUrl" type="xsd:string">
                <annotation>
                  <documentation>
                    The streaming URL of the audio.
                    &lt;span class="constraint Selectable"&gt;This field can be selected using the value "StreamingUrl".&lt;/span&gt;
                  </documentation>
                </annotation>
              </element>
              <element maxOccurs="1" minOccurs="0"
                name="readyToPlayOnTheWeb" type="xsd:boolean">
                <annotation>
                  <documentation>
                    Indicates whether the audio is ready to play on the web.
                    &lt;span class="constraint Selectable"&gt;This field can be selected using the value "ReadyToPlayOnTheWeb".&lt;/span&gt;
                  </documentation>
                </annotation>
              </element>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="AudioError">
        <annotation>
          <documentation>
            Error class for errors associated with parsing audio data.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:AudioError.Reason">
                <annotation>
                  <documentation>
                    The error reason represented by an enum.
                  </documentation>
                </annotation>
              </element>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="AuthenticationError">
        <annotation>
          <documentation>
            Errors returned when Authentication failed.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:AuthenticationError.Reason">
                <annotation>
                  <documentation>
                    The error reason represented by an enum.
                  </documentation>
                </annotation>
              </element>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="AuthorizationError">
        <annotation>
          <documentation>
            Errors encountered when trying to authorize a user.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:AuthorizationError.Reason">
                <annotation>
                  <documentation>
                    The error reason represented by an enum.
                  </documentation>
                </annotation>
              </element>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="ClientTermsError">
        <annotation>
          <documentation>
            Error due to user not accepting the AdWords terms of service.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:ClientTermsError.Reason"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="DatabaseError">
        <annotation>
          <documentation>
            Errors that are thrown due to a database access problem.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:DatabaseError.Reason">
                <annotation>
                  <documentation>
                    The error reason represented by an enum.
                  </documentation>
                </annotation>
              </element>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="DateRange">
        <annotation>
          <documentation>
            Represents a range of dates that has either an upper or a lower bound.
            The format for the date is YYYYMMDD.
          </documentation>
        </annotation>
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="min" type="xsd:string">
            <annotation>
              <documentation>
                the lower bound of this date range, inclusive.
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="1" minOccurs="0" name="max" type="xsd:string">
            <annotation>
              <documentation>
                the upper bound of this date range, inclusive.
              </documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="Dimensions">
        <annotation>
          <documentation>
            Represents a simple height-width dimension.
          </documentation>
        </annotation>
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="width" type="xsd:int">
            <annotation>
              <documentation>
                Width of the dimension
                &lt;span class="constraint Selectable"&gt;This field can be selected using the value "Width".&lt;/span&gt;&lt;span class="constraint Filterable"&gt;This field can be filtered on.&lt;/span&gt;
                &lt;span class="constraint Required"&gt;This field is required and should not be {@code null}.&lt;/span&gt;
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="1" minOccurs="0" name="height" type="xsd:int">
            <annotation>
              <documentation>
                Height of the dimension
                &lt;span class="constraint Selectable"&gt;This field can be selected using the value "Height".&lt;/span&gt;&lt;span class="constraint Filterable"&gt;This field can be filtered on.&lt;/span&gt;
                &lt;span class="constraint Required"&gt;This field is required and should not be {@code null}.&lt;/span&gt;
              </documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="DistinctError">
        <annotation>
          <documentation>
            Errors related to distinct ids or content.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:DistinctError.Reason">
                <annotation>
                  <documentation>
                    The error reason represented by an enum.
                  </documentation>
                </annotation>
              </element>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="EntityNotFound">
        <annotation>
          <documentation>
            An id did not correspond to an entity, or it referred to an entity which does not belong to the
            customer.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:EntityNotFound.Reason">
                <annotation>
                  <documentation>
                    Reason for this error.
                  </documentation>
                </annotation>
              </element>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="FieldPathElement">
        <annotation>
          <documentation>
            A segment of a field path. Each dot in a field path defines a new segment.
          </documentation>
        </annotation>
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="field" type="xsd:string">
            <annotation>
              <documentation>
                The name of a field in lower camelcase. (e.g. "biddingStrategy")
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="1" minOccurs="0" name="index" type="xsd:int">
            <annotation>
              <documentation>
                For list fields, this is a 0-indexed position in the list. Null for non-list fields.
              </documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="IdError">
        <annotation>
          <documentation>
            Errors associated with the ids.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:IdError.Reason">
                <annotation>
                  <documentation>
                    The error reason represented by an enum.
                  </documentation>
                </annotation>
              </element>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="Image">
        <annotation>
          <documentation>
            Encapsulates an Image media. {@code mediaId} is used in {@code SET}
            operations.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:Media">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="data" type="xsd:base64Binary">
                <annotation>
                  <documentation>
                    Raw image data.
                  </documentation>
                </annotation>
              </element>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="ImageError">
        <annotation>
          <documentation>
            Error class for errors associated with parsing image data.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:ImageError.Reason">
                <annotation>
                  <documentation>
                    The error reason represented by an enum.
                  </documentation>
                </annotation>
              </element>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="InternalApiError">
        <annotation>
          <documentation>
            Indicates that a server-side error has occured. {@code InternalApiError}s
            are generally not the result of an invalid request or message sent by the
            client.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:InternalApiError.Reason">
                <annotation>
                  <documentation>
                    The error reason represented by an enum.
                  </documentation>
                </annotation>
              </element>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="Media">
        <annotation>
          <documentation>
            Represents some kind of media.
          </documentation>
        </annotation>
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="mediaId" type="xsd:long">
            <annotation>
              <documentation>
                ID of this media object.
                &lt;span class="constraint Selectable"&gt;This field can be selected using the value "MediaId".&lt;/span&gt;&lt;span class="constraint Filterable"&gt;This field can be filtered on.&lt;/span&gt;
                &lt;span class="constraint Required"&gt;This field is required and should not be {@code null} when it is contained within {@link Operator}s : SET, REMOVE.&lt;/span&gt;
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="1" minOccurs="0" name="type" type="tns:Media.MediaType">
            <annotation>
              <documentation>
                Type of media object. Required when using {@link MediaService#upload} to upload a new media
                file. MEDIA_BUNDLE, ICON, IMAGE, and DYNAMIC_IMAGE are the supported MediaTypes to upload.
                &lt;span class="constraint Selectable"&gt;This field can be selected using the value "Type".&lt;/span&gt;&lt;span class="constraint Filterable"&gt;This field can be filtered on.&lt;/span&gt;
                &lt;span class="constraint ReadOnly"&gt;This field is read only and will be ignored when sent to the API for the following {@link Operator}s: REMOVE and SET.&lt;/span&gt;
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="1" minOccurs="0" name="referenceId" type="xsd:long">
            <annotation>
              <documentation>
                Media reference ID key.
                &lt;span class="constraint Selectable"&gt;This field can be selected using the value "ReferenceId".&lt;/span&gt;&lt;span class="constraint Filterable"&gt;This field can be filtered on.&lt;/span&gt;
                &lt;span class="constraint ReadOnly"&gt;This field is read only and will be ignored when sent to the API for the following {@link Operator}s: REMOVE and SET.&lt;/span&gt;
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="unbounded" minOccurs="0" name="dimensions" type="tns:Media_Size_DimensionsMapEntry">
            <annotation>
              <documentation>
                Various dimension sizes for the media. Only applies to image media (and video media for
                video thumbnails).
                &lt;span class="constraint Selectable"&gt;This field can be selected using the value "Dimensions".&lt;/span&gt;
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="unbounded" minOccurs="0" name="urls" type="tns:Media_Size_StringMapEntry">
            <annotation>
              <documentation>
                URLs pointing to the resized media for the given sizes. Only applies to image media.
                &lt;span class="constraint Selectable"&gt;This field can be selected using the value "Urls".&lt;/span&gt;
                &lt;span class="constraint ReadOnly"&gt;This field is read only and will be ignored when sent to the API.&lt;/span&gt;
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="1" minOccurs="0" name="mimeType" type="tns:Media.LegacyMimeType">
            <annotation>
              <documentation>
                The mime type of the media.
                &lt;span class="constraint Selectable"&gt;This field can be selected using the value "MimeType".&lt;/span&gt;&lt;span class="constraint Filterable"&gt;This field can be filtered on.&lt;/span&gt;
                &lt;span class="constraint ReadOnly"&gt;This field is read only and will be ignored when sent to the API for the following {@link Operator}s: REMOVE and SET.&lt;/span&gt;
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="1" minOccurs="0" name="sourceUrl" type="xsd:string">
            <annotation>
              <documentation>
                The URL of where the original media was downloaded from (or a file name). Only used for media
                of type AUDIO and IMAGE.
                &lt;span class="constraint Selectable"&gt;This field can be selected using the value "SourceUrl".&lt;/span&gt;&lt;span class="constraint Filterable"&gt;This field can be filtered on.&lt;/span&gt;
                &lt;span class="constraint ReadOnly"&gt;This field is read only and will be ignored when sent to the API for the following {@link Operator}s: REMOVE and SET.&lt;/span&gt;
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="1" minOccurs="0" name="name" type="xsd:string">
            <annotation>
              <documentation>
                The name of the media. The name can be used by clients to
                help identify previously uploaded media.
                &lt;span class="constraint Selectable"&gt;This field can be selected using the value "Name".&lt;/span&gt;&lt;span class="constraint Filterable"&gt;This field can be filtered on.&lt;/span&gt;
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="1" minOccurs="0" name="fileSize" type="xsd:long">
            <annotation>
              <documentation>
                The size of the media file in bytes.
                &lt;span class="constraint Selectable"&gt;This field can be selected using the value "FileSize".&lt;/span&gt;&lt;span class="constraint Filterable"&gt;This field can be filtered on.&lt;/span&gt;
                &lt;span class="constraint ReadOnly"&gt;This field is read only and will be ignored when sent to the API for the following {@link Operator}s: REMOVE and SET.&lt;/span&gt;
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="1" minOccurs="0" name="creationTime" type="xsd:string">
            <annotation>
              <documentation>
                Media creation date in the format YYYY-MM-DD HH:MM:SS+TZ.
                This is not updatable and not specifiable.
                &lt;span class="constraint Selectable"&gt;This field can be selected using the value "CreationTime".&lt;/span&gt;&lt;span class="constraint Filterable"&gt;This field can be filtered on.&lt;/span&gt;
                &lt;span class="constraint ReadOnly"&gt;This field is read only and will be ignored when sent to the API for the following {@link Operator}s: REMOVE and SET.&lt;/span&gt;
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="1" minOccurs="0" name="Media.Type" type="xsd:string">
            <annotation>
              <documentation>
                Indicates that this instance is a subtype of Media.
                Although this field is returned in the response, it is ignored on input
                and cannot be selected. Specify xsi:type instead.
              </documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="MediaBundle">
        <annotation>
          <documentation>
            Represents a ZIP archive media the content of which contains HTML5 assets.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:Media">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="data" type="xsd:base64Binary">
                <annotation>
                  <documentation>
                    Raw zipped data.
                  </documentation>
                </annotation>
              </element>
              <element maxOccurs="1" minOccurs="0" name="mediaBundleUrl" type="xsd:string">
                <annotation>
                  <documentation>
                    URL pointing to the data for the MediaBundle data.
                    &lt;span class="constraint ReadOnly"&gt;This field is read only and will be ignored when sent to the API.&lt;/span&gt;
                  </documentation>
                </annotation>
              </element>
              <element maxOccurs="1" minOccurs="0" name="entryPoint" type="xsd:string">
                <annotation>
                  <documentation>
                    Entry in the ZIP archive used to display the &lt;code&gt;MediaBundle&lt;/code&gt; in an
                    &lt;code&gt;Ad&lt;/code&gt;. This field can only be set and returned when the &lt;code&gt;MediaBundle&lt;/code&gt; is
                    used with the &lt;code&gt;AdGroupAdService&lt;/code&gt;. If this field is set when calling
                    &lt;code&gt;MediaService&lt;/code&gt;, an error will be returned.
                    
                    &lt;p&gt;To use a &lt;code&gt;MediaBundle&lt;/code&gt; that was created with the &lt;code&gt;MediaService&lt;/code&gt; in
                    an &lt;code&gt;Ad&lt;/code&gt;, create a bundle and set the &lt;code&gt;mediaId&lt;/code&gt; and
                    &lt;code&gt;entryPoint&lt;/code&gt; fields.
                  </documentation>
                </annotation>
              </element>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="MediaBundleError">
        <annotation>
          <documentation>
            Error class for errors associated with parsing media bundle data.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:MediaBundleError.Reason">
                <annotation>
                  <documentation>
                    The error reason represented by an enum.
                  </documentation>
                </annotation>
              </element>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="MediaError">
        <annotation>
          <documentation>
            Error class for media related errors.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:MediaError.Reason">
                <annotation>
                  <documentation>
                    The error reason represented by an enum.
                  </documentation>
                </annotation>
              </element>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="MediaPage">
        <annotation>
          <documentation>
            Page of media returned by the {@link MediaService} which includes
            the media.
          </documentation>
        </annotation>
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="entries" type="tns:Media">
            <annotation>
              <documentation>
                The result entries in this page.
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="1" minOccurs="0" name="totalNumEntries" type="xsd:int">
            <annotation>
              <documentation>
                Total number of entries in the result that this page is a part of.
              </documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="Media_Size_DimensionsMapEntry">
        <annotation>
          <documentation>
            This represents an entry in a map with a key of type Size
            and value of type Dimensions.
          </documentation>
        </annotation>
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="key" type="tns:Media.Size"/>
          <element maxOccurs="1" minOccurs="0" name="value" type="tns:Dimensions"/>
        </sequence>
      </complexType>
      <complexType name="Media_Size_StringMapEntry">
        <annotation>
          <documentation>
            This represents an entry in a map with a key of type Size
            and value of type String.
          </documentation>
        </annotation>
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="key" type="tns:Media.Size"/>
          <element maxOccurs="1" minOccurs="0" name="value" type="xsd:string"/>
        </sequence>
      </complexType>
      <complexType name="NewEntityCreationError">
        <annotation>
          <documentation>
            Error associated with creation of new entities.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:NewEntityCreationError.Reason">
                <annotation>
                  <documentation>
                    The error reason represented by an enum.
                  </documentation>
                </annotation>
              </element>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="NotEmptyError">
        <annotation>
          <documentation>
            Errors corresponding with violation of a NOT EMPTY check.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:NotEmptyError.Reason">
                <annotation>
                  <documentation>
                    The error reason represented by an enum.
                  </documentation>
                </annotation>
              </element>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="NullError">
        <annotation>
          <documentation>
            Errors associated with violation of a NOT NULL check.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:NullError.Reason">
                <annotation>
                  <documentation>
                    The error reason represented by an enum.
                  </documentation>
                </annotation>
              </element>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="OperationAccessDenied">
        <annotation>
          <documentation>
            Operation not permitted due to the invoked service's access policy.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:OperationAccessDenied.Reason"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="OperatorError">
        <annotation>
          <documentation>
            Errors due to the use of unsupported operations.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:OperatorError.Reason">
                <annotation>
                  <documentation>
                    The error reason represented by an enum.
                  </documentation>
                </annotation>
              </element>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="OrderBy">
        <annotation>
          <documentation>
            Specifies how the resulting information should be sorted.
          </documentation>
        </annotation>
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="field" type="xsd:string">
            <annotation>
              <documentation>
                The field to sort the results on.
                &lt;span class="constraint Required"&gt;This field is required and should not be {@code null}.&lt;/span&gt;
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="1" minOccurs="0" name="sortOrder" type="tns:SortOrder">
            <annotation>
              <documentation>
                The order to sort the results on. The default sort order is {@link SortOrder#ASCENDING}.
              </documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="Paging">
        <annotation>
          <documentation>
            Specifies the page of results to return in the response. A page is specified
            by the result position to start at and the maximum number of results to
            return.
          </documentation>
        </annotation>
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="startIndex" type="xsd:int">
            <annotation>
              <documentation>
                Index of the first result to return in this page.
                &lt;span class="constraint InRange"&gt;This field must be greater than or equal to 0.&lt;/span&gt;
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="1" minOccurs="0" name="numberResults" type="xsd:int">
            <annotation>
              <documentation>
                Maximum number of results to return in this page. Set this to a reasonable value to limit
                the number of results returned per page.
                &lt;span class="constraint InRange"&gt;This field must be greater than or equal to 0.&lt;/span&gt;
              </documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="Predicate">
        <annotation>
          <documentation>
            Specifies how an entity (eg. adgroup, campaign, criterion, ad) should be filtered.
          </documentation>
        </annotation>
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="field" type="xsd:string">
            <annotation>
              <documentation>
                The field by which to filter the returned data. Possible values are marked Filterable on
                the entity's reference page. For example, for predicates for the
                CampaignService {@link Selector selector}, refer to the filterable fields from the
                {@link Campaign} reference page.
                &lt;span class="constraint Required"&gt;This field is required and should not be {@code null}.&lt;/span&gt;
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="1" minOccurs="0" name="operator" type="tns:Predicate.Operator">
            <annotation>
              <documentation>
                The operator to use for filtering the data returned.
                &lt;span class="constraint Required"&gt;This field is required and should not be {@code null}.&lt;/span&gt;
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="unbounded" minOccurs="0" name="values" type="xsd:string">
            <annotation>
              <documentation>
                The values by which to filter the field. The {@link Operator#CONTAINS_ALL},
                {@link Operator#CONTAINS_ANY}, {@link Operator#CONTAINS_NONE}, {@link Operator#IN}
                and {@link Operator#NOT_IN} take multiple values. All others take a single value.
                &lt;span class="constraint ContentsNotNull"&gt;This field must not contain {@code null} elements.&lt;/span&gt;
                &lt;span class="constraint Required"&gt;This field is required and should not be {@code null}.&lt;/span&gt;
              </documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="QueryError">
        <annotation>
          <documentation>
            A QueryError represents possible errors for query parsing and execution.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:QueryError.Reason"/>
              <element maxOccurs="1" minOccurs="0" name="message" type="xsd:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="QuotaCheckError">
        <annotation>
          <documentation>
            Encapsulates the errors thrown during developer quota checks.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:QuotaCheckError.Reason"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="RangeError">
        <annotation>
          <documentation>
            A list of all errors associated with the Range constraint.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:RangeError.Reason">
                <annotation>
                  <documentation>
                    The error reason represented by an enum.
                  </documentation>
                </annotation>
              </element>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="RateExceededError">
        <annotation>
          <documentation>
            Signals that a call failed because a measured rate exceeded.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:RateExceededError.Reason">
                <annotation>
                  <documentation>
                    The error reason represented by an enum.
                  </documentation>
                </annotation>
              </element>
              <element maxOccurs="1" minOccurs="0" name="rateName" type="xsd:string">
                <annotation>
                  <documentation>
                    Cause of the rate exceeded error.
                  </documentation>
                </annotation>
              </element>
              <element maxOccurs="1" minOccurs="0" name="rateScope" type="xsd:string">
                <annotation>
                  <documentation>
                    The scope of the rate (ACCOUNT/DEVELOPER).
                  </documentation>
                </annotation>
              </element>
              <element maxOccurs="1" minOccurs="0"
                name="retryAfterSeconds" type="xsd:int">
                <annotation>
                  <documentation>
                    The amount of time (in seconds) the client should wait before retrying the request.
                  </documentation>
                </annotation>
              </element>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="ReadOnlyError">
        <annotation>
          <documentation>
            Errors from attempting to write to read-only fields.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:ReadOnlyError.Reason">
                <annotation>
                  <documentation>
                    The error reason represented by an enum.
                  </documentation>
                </annotation>
              </element>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="RejectedError">
        <annotation>
          <documentation>
            Indicates that a field was rejected due to compatibility issues.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:RejectedError.Reason">
                <annotation>
                  <documentation>
                    The error reason represented by an enum.
                  </documentation>
                </annotation>
              </element>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="RequestError">
        <annotation>
          <documentation>
            Encapsulates the generic errors thrown when there's an error with user
            request.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:RequestError.Reason"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="RequiredError">
        <annotation>
          <documentation>
            Errors due to missing required field.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:RequiredError.Reason">
                <annotation>
                  <documentation>
                    The error reason represented by an enum.
                  </documentation>
                </annotation>
              </element>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="Selector">
        <annotation>
          <documentation>
            A generic selector to specify the type of information to return.
          </documentation>
        </annotation>
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="fields" type="xsd:string">
            <annotation>
              <documentation>
                List of fields to select.
                &lt;a href="/adwords/api/docs/appendix/selectorfields"&gt;Possible values&lt;/a&gt;
                are marked {@code Selectable} on the entity's reference page.
                For example, for the {@code CampaignService} selector, refer to the
                selectable fields from the {@link Campaign} reference page.
                &lt;span class="constraint ContentsDistinct"&gt;This field must contain distinct elements.&lt;/span&gt;
                &lt;span class="constraint ContentsNotNull"&gt;This field must not contain {@code null} elements.&lt;/span&gt;
                &lt;span class="constraint Required"&gt;This field is required and should not be {@code null}.&lt;/span&gt;
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="unbounded" minOccurs="0" name="predicates" type="tns:Predicate">
            <annotation>
              <documentation>
                Specifies how an entity (eg. adgroup, campaign, criterion, ad) should be filtered.
                &lt;span class="constraint ContentsNotNull"&gt;This field must not contain {@code null} elements.&lt;/span&gt;
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="1" minOccurs="0" name="dateRange" type="tns:DateRange">
            <annotation>
              <documentation>
                Range of dates for which you want to include data. If this value is omitted,
                results for all dates are returned.
                &lt;p class="note"&gt;&lt;b&gt;Note:&lt;/b&gt; This field is only used by the report download
                service. For all other services, it is ignored.&lt;/p&gt;
                &lt;span class="constraint DateRangeWithinRange"&gt;This range must be contained within the range [19700101, 20380101].&lt;/span&gt;
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="unbounded" minOccurs="0" name="ordering" type="tns:OrderBy">
            <annotation>
              <documentation>
                The fields on which you want to sort, and the sort order. The order in the list is
                significant: The first element in the list indicates the primary sort order, the next
                specifies the secondary sort order and so on.
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="1" minOccurs="0" name="paging" type="tns:Paging">
            <annotation>
              <documentation>
                Pagination information.
              </documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="SelectorError">
        <annotation>
          <documentation>
            Represents possible error codes for {@link Selector}.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:SelectorError.Reason">
                <annotation>
                  <documentation>
                    The error reason represented by enum.
                  </documentation>
                </annotation>
              </element>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="SizeLimitError">
        <annotation>
          <documentation>
            Indicates that the number of entries in the request or response exceeds the system limit.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:SizeLimitError.Reason">
                <annotation>
                  <documentation>
                    The error reason represented by an enum.
                  </documentation>
                </annotation>
              </element>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="SoapHeader">
        <annotation>
          <documentation>
            Defines the required and optional elements within the header of a SOAP request.
          </documentation>
        </annotation>
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="clientCustomerId" type="xsd:string">
            <annotation>
              <documentation>
                The header identifies the customer id of the client of the AdWords manager, if an AdWords
                manager is acting on behalf of their client or the customer id of the advertiser managing their
                own account.
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="1" minOccurs="0" name="developerToken" type="xsd:string">
            <annotation>
              <documentation>
                Developer token to identify that the person making the call has enough
                quota.
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="1" minOccurs="0" name="userAgent" type="xsd:string">
            <annotation>
              <documentation>
                UserAgent is used to track distribution of API client programs and
                application usage. The client is responsible for putting in a meaningful
                value for tracking purposes. To be clear this is not the same as an HTTP
                user agent.
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="1" minOccurs="0" name="validateOnly" type="xsd:boolean">
            <annotation>
              <documentation>
                Used to validate the request without executing it.
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="1" minOccurs="0" name="partialFailure" type="xsd:boolean">
            <annotation>
              <documentation>
                If true, API will try to commit as many error free operations as possible and
                report the other operations' errors.
                
                &lt;p&gt;Ignored for non-mutate calls.
              </documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="SoapResponseHeader">
        <annotation>
          <documentation>
            Defines the elements within the header of a SOAP response.
          </documentation>
        </annotation>
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="requestId" type="xsd:string">
            <annotation>
              <documentation>
                Unique id that identifies this request. If developers have any support issues, sending us
                this id will enable us to find their request more easily.
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="1" minOccurs="0" name="serviceName" type="xsd:string">
            <annotation>
              <documentation>
                The name of the service being invoked.
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="1" minOccurs="0" name="methodName" type="xsd:string">
            <annotation>
              <documentation>
                The name of the method being invoked.
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="1" minOccurs="0" name="operations" type="xsd:long">
            <annotation>
              <documentation>
                Number of operations performed for this SOAP request.
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="1" minOccurs="0" name="responseTime" type="xsd:long">
            <annotation>
              <documentation>
                Elapsed time in milliseconds between the AdWords API receiving the request and sending the
                response.
              </documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="StringFormatError">
        <annotation>
          <documentation>
            A list of error code for reporting invalid content of input strings.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:StringFormatError.Reason"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="StringLengthError">
        <annotation>
          <documentation>
            Errors associated with the length of the given string being
            out of bounds.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:StringLengthError.Reason">
                <annotation>
                  <documentation>
                    The error reason represented by an enum.
                  </documentation>
                </annotation>
              </element>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="Video">
        <annotation>
          <documentation>
            Encapsulates a Video media identified by a MediaId.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:Media">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="durationMillis" type="xsd:long">
                <annotation>
                  <documentation>
                    The duration of the associated video, in milliseconds.
                    &lt;span class="constraint Selectable"&gt;This field can be selected using the value "DurationMillis".&lt;/span&gt;&lt;span class="constraint Filterable"&gt;This field can be filtered on.&lt;/span&gt;
                  </documentation>
                </annotation>
              </element>
              <element maxOccurs="1" minOccurs="0" name="streamingUrl" type="xsd:string">
                <annotation>
                  <documentation>
                    Streaming URL for the video.
                    &lt;span class="constraint Selectable"&gt;This field can be selected using the value "StreamingUrl".&lt;/span&gt;
                  </documentation>
                </annotation>
              </element>
              <element maxOccurs="1" minOccurs="0"
                name="readyToPlayOnTheWeb" type="xsd:boolean">
                <annotation>
                  <documentation>
                    Indicates whether the video is ready to play on the web.
                    &lt;span class="constraint Selectable"&gt;This field can be selected using the value "ReadyToPlayOnTheWeb".&lt;/span&gt;
                  </documentation>
                </annotation>
              </element>
              <element maxOccurs="1" minOccurs="0"
                name="industryStandardCommercialIdentifier" type="xsd:string">
                <annotation>
                  <documentation>
                    The Industry Standard Commercial Identifier code for this media, used
                    mainly for television commercials.
                    &lt;span class="constraint Selectable"&gt;This field can be selected using the value "IndustryStandardCommercialIdentifier".&lt;/span&gt;&lt;span class="constraint Filterable"&gt;This field can be filtered on.&lt;/span&gt;
                  </documentation>
                </annotation>
              </element>
              <element maxOccurs="1" minOccurs="0" name="advertisingId" type="xsd:string">
                <annotation>
                  <documentation>
                    The Advertising Digital Identification code for this media, as defined by
                    the American Association of Advertising Agencies, used mainly for
                    television commercials.
                    &lt;span class="constraint Selectable"&gt;This field can be selected using the value "AdvertisingId".&lt;/span&gt;&lt;span class="constraint Filterable"&gt;This field can be filtered on.&lt;/span&gt;
                  </documentation>
                </annotation>
              </element>
              <element maxOccurs="1" minOccurs="0"
                name="youTubeVideoIdString" type="xsd:string">
                <annotation>
                  <documentation>
                    For YouTube-hosted videos, the YouTube video ID (as seen in YouTube URLs)
                    may also be filled in.
                    &lt;span class="constraint Selectable"&gt;This field can be selected using the value "YouTubeVideoIdString".&lt;/span&gt;&lt;span class="constraint Filterable"&gt;This field can be filtered on.&lt;/span&gt;
                  </documentation>
                </annotation>
              </element>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="VideoError">
        <annotation>
          <documentation>
            Error class for errors associated with parsing video data.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:VideoError.Reason">
                <annotation>
                  <documentation>
                    The error reason represented by an enum.
                  </documentation>
                </annotation>
              </element>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <simpleType name="AudioError.Reason">
        <restriction base="xsd:string">
          <enumeration value="INVALID_AUDIO"/>
          <enumeration value="PROBLEM_READING_AUDIO_FILE"/>
          <enumeration value="ERROR_STORING_AUDIO"/>
          <enumeration value="FILE_TOO_LARGE"/>
          <enumeration value="UNSUPPORTED_AUDIO"/>
          <enumeration value="ERROR_GENERATING_STREAMING_URL"/>
        </restriction>
      </simpleType>
      <simpleType name="AuthenticationError.Reason">
        <annotation>
          <documentation>
            The single reason for the authentication failure.
          </documentation>
        </annotation>
        <restriction base="xsd:string">
          <enumeration value="AUTHENTICATION_FAILED">
            <annotation>
              <documentation>
                Authentication of the request failed.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="CLIENT_CUSTOMER_ID_IS_REQUIRED">
            <annotation>
              <documentation>
                Client Customer Id is required if CustomerIdMode is set to CLIENT_EXTERNAL_CUSTOMER_ID.
                Starting version V201409 ClientCustomerId will be required for all requests except
                for {@link CustomerService#get}
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="CLIENT_EMAIL_REQUIRED">
            <annotation>
              <documentation>
                Client Email is required if CustomerIdMode is set to CLIENT_EXTERNAL_EMAIL_FIELD.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="CLIENT_CUSTOMER_ID_INVALID">
            <annotation>
              <documentation>
                Client customer Id is not a number.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="CLIENT_EMAIL_INVALID">
            <annotation>
              <documentation>
                Client customer Id is not a number.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="CLIENT_EMAIL_FAILED_TO_AUTHENTICATE">
            <annotation>
              <documentation>
                Client email is not a valid customer email.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="CUSTOMER_NOT_FOUND">
            <annotation>
              <documentation>
                No customer found for the customer id provided in the header.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="GOOGLE_ACCOUNT_DELETED">
            <annotation>
              <documentation>
                Client's Google Account is deleted.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="GOOGLE_ACCOUNT_COOKIE_INVALID">
            <annotation>
              <documentation>
                Google account login token in the cookie is invalid.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="FAILED_TO_AUTHENTICATE_GOOGLE_ACCOUNT">
            <annotation>
              <documentation>
                problem occurred during Google account authentication.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="GOOGLE_ACCOUNT_USER_AND_ADS_USER_MISMATCH">
            <annotation>
              <documentation>
                The user in the google account login token does not match the UserId in the cookie.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="LOGIN_COOKIE_REQUIRED">
            <annotation>
              <documentation>
                Login cookie is required for authentication.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="NOT_ADS_USER">
            <annotation>
              <documentation>
                User in the cookie is not a valid Ads user.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="OAUTH_TOKEN_INVALID">
            <annotation>
              <documentation>
                Oauth token in the header is not valid.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="OAUTH_TOKEN_EXPIRED">
            <annotation>
              <documentation>
                Oauth token in the header has expired.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="OAUTH_TOKEN_DISABLED">
            <annotation>
              <documentation>
                Oauth token in the header has been disabled.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="OAUTH_TOKEN_REVOKED">
            <annotation>
              <documentation>
                Oauth token in the header has been revoked.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="OAUTH_TOKEN_HEADER_INVALID">
            <annotation>
              <documentation>
                Oauth token HTTP header is malformed.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="LOGIN_COOKIE_INVALID">
            <annotation>
              <documentation>
                Login cookie is not valid.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="FAILED_TO_RETRIEVE_LOGIN_COOKIE">
            <annotation>
              <documentation>
                Failed to decrypt the login cookie.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="USER_ID_INVALID">
            <annotation>
              <documentation>
                User Id in the header is not a valid id.
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="AuthorizationError.Reason">
        <annotation>
          <documentation>
            The reasons for the authorization error.
          </documentation>
        </annotation>
        <restriction base="xsd:string">
          <enumeration value="UNABLE_TO_AUTHORIZE">
            <annotation>
              <documentation>
                Could not complete authorization due to an internal problem.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="NO_ADWORDS_ACCOUNT_FOR_CUSTOMER">
            <annotation>
              <documentation>
                Customer has no AdWords account.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="USER_PERMISSION_DENIED">
            <annotation>
              <documentation>
                User doesn't have permission to access customer.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="EFFECTIVE_USER_PERMISSION_DENIED">
            <annotation>
              <documentation>
                Effective user doesn't have permission to access this customer.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="CUSTOMER_NOT_ACTIVE">
            <annotation>
              <documentation>
                Access denied since the customer is not active.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="USER_HAS_READONLY_PERMISSION">
            <annotation>
              <documentation>
                User has read-only permission cannot mutate.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="NO_CUSTOMER_FOUND">
            <annotation>
              <documentation>
                No customer found.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="SERVICE_ACCESS_DENIED">
            <annotation>
              <documentation>
                Developer doesn't have permission to access service.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="TWO_STEP_VERIFICATION_NOT_ENROLLED">
            <annotation>
              <documentation>
                The customer has a policy to enforce 2-Step Verification, but the user is not enrolled.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="ADVANCED_PROTECTION_NOT_ENROLLED">
            <annotation>
              <documentation>
                The customer has a policy to enforce enrollment in the Advanced Protection Program, but
                the user is not enrolled.
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="ClientTermsError.Reason">
        <annotation>
          <documentation>
            Enums for the various reasons an error can be thrown as a result of
            ClientTerms violation.
          </documentation>
        </annotation>
        <restriction base="xsd:string">
          <enumeration value="INCOMPLETE_SIGNUP_CURRENT_ADWORDS_TNC_NOT_AGREED">
            <annotation>
              <documentation>
                Customer has not agreed to the latest AdWords Terms &amp; Conditions
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="DatabaseError.Reason">
        <annotation>
          <documentation>
            The reasons for the database error.
          </documentation>
        </annotation>
        <restriction base="xsd:string">
          <enumeration value="CONCURRENT_MODIFICATION">
            <annotation>
              <documentation>
                A concurrency problem occurred as two threads were attempting to modify same object.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="PERMISSION_DENIED">
            <annotation>
              <documentation>
                The permission was denied to access an object.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="ACCESS_PROHIBITED">
            <annotation>
              <documentation>
                The user's access to an object has been prohibited.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="CAMPAIGN_PRODUCT_NOT_SUPPORTED">
            <annotation>
              <documentation>
                Requested campaign belongs to a product that is not supported by the api.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="DUPLICATE_KEY">
            <annotation>
              <documentation>
                a duplicate key was detected upon insertion
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="DATABASE_ERROR">
            <annotation>
              <documentation>
                a database error has occurred
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="UNKNOWN">
            <annotation>
              <documentation>
                an unknown error has occurred
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="DistinctError.Reason">
        <annotation>
          <documentation>
            The reasons for the validation error.
          </documentation>
        </annotation>
        <restriction base="xsd:string">
          <enumeration value="DUPLICATE_ELEMENT"/>
          <enumeration value="DUPLICATE_TYPE"/>
        </restriction>
      </simpleType>
      <simpleType name="EntityNotFound.Reason">
        <restriction base="xsd:string">
          <enumeration value="INVALID_ID">
            <annotation>
              <documentation>
                The specified id refered to an entity which either doesn't exist or is not accessible to the
                customer. e.g. campaign belongs to another customer.
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="IdError.Reason">
        <annotation>
          <documentation>
            The reasons for the target error.
          </documentation>
        </annotation>
        <restriction base="xsd:string">
          <enumeration value="NOT_FOUND">
            <annotation>
              <documentation>
                Id not found
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="ImageError.Reason">
        <restriction base="xsd:string">
          <enumeration value="INVALID_IMAGE">
            <annotation>
              <documentation>
                The image is not valid.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="STORAGE_ERROR">
            <annotation>
              <documentation>
                The image could not be stored.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="BAD_REQUEST">
            <annotation>
              <documentation>
                There was a problem with the request.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="UNEXPECTED_SIZE">
            <annotation>
              <documentation>
                The image is not of legal dimensions.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="ANIMATED_NOT_ALLOWED">
            <annotation>
              <documentation>
                Animated image are not permitted.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="ANIMATION_TOO_LONG">
            <annotation>
              <documentation>
                Animation is too long.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="SERVER_ERROR">
            <annotation>
              <documentation>
                There was an error on the server.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="CMYK_JPEG_NOT_ALLOWED">
            <annotation>
              <documentation>
                Image cannot be in CMYK color format.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="FLASH_NOT_ALLOWED">
            <annotation>
              <documentation>
                Flash images are not permitted.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="FLASH_WITHOUT_CLICKTAG">
            <annotation>
              <documentation>
                Flash images must support clickTag.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="FLASH_ERROR_AFTER_FIXING_CLICK_TAG">
            <annotation>
              <documentation>
                A flash error has occurred after fixing the click tag.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="ANIMATED_VISUAL_EFFECT">
            <annotation>
              <documentation>
                Unacceptable visual effects.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="FLASH_ERROR">
            <annotation>
              <documentation>
                There was a problem with the flash image.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="LAYOUT_PROBLEM">
            <annotation>
              <documentation>
                Incorrect image layout.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="PROBLEM_READING_IMAGE_FILE">
            <annotation>
              <documentation>
                There was a problem reading the image file.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="ERROR_STORING_IMAGE">
            <annotation>
              <documentation>
                There was an error storing the image.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="ASPECT_RATIO_NOT_ALLOWED">
            <annotation>
              <documentation>
                The aspect ratio of the image is not allowed.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="FLASH_HAS_NETWORK_OBJECTS">
            <annotation>
              <documentation>
                Flash cannot have network objects.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="FLASH_HAS_NETWORK_METHODS">
            <annotation>
              <documentation>
                Flash cannot have network methods.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="FLASH_HAS_URL">
            <annotation>
              <documentation>
                Flash cannot have a Url.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="FLASH_HAS_MOUSE_TRACKING">
            <annotation>
              <documentation>
                Flash cannot use mouse tracking.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="FLASH_HAS_RANDOM_NUM">
            <annotation>
              <documentation>
                Flash cannot have a random number.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="FLASH_SELF_TARGETS">
            <annotation>
              <documentation>
                Ad click target cannot be '_self'.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="FLASH_BAD_GETURL_TARGET">
            <annotation>
              <documentation>
                GetUrl method should only use '_blank'.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="FLASH_VERSION_NOT_SUPPORTED">
            <annotation>
              <documentation>
                Flash version is not supported.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="FLASH_WITHOUT_HARD_CODED_CLICK_URL">
            <annotation>
              <documentation>
                Flash movies need to have hard coded click URL or clickTAG
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="INVALID_FLASH_FILE">
            <annotation>
              <documentation>
                Uploaded flash file is corrupted.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="FAILED_TO_FIX_CLICK_TAG_IN_FLASH">
            <annotation>
              <documentation>
                Uploaded flash file can be parsed, but the click tag can not be fixed properly.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="FLASH_ACCESSES_NETWORK_RESOURCES">
            <annotation>
              <documentation>
                Flash movie accesses network resources
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="FLASH_EXTERNAL_JS_CALL">
            <annotation>
              <documentation>
                Flash movie attempts to call external javascript code
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="FLASH_EXTERNAL_FS_CALL">
            <annotation>
              <documentation>
                Flash movie attempts to call flash system commands
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="FILE_TOO_LARGE">
            <annotation>
              <documentation>
                Image file is too large.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="IMAGE_DATA_TOO_LARGE">
            <annotation>
              <documentation>
                Image data is too large.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="IMAGE_PROCESSING_ERROR">
            <annotation>
              <documentation>
                Error while processing the image.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="IMAGE_TOO_SMALL">
            <annotation>
              <documentation>
                Image is too small.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="INVALID_INPUT">
            <annotation>
              <documentation>
                Input was invalid.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="PROBLEM_READING_FILE">
            <annotation>
              <documentation>
                There was a problem reading the image file.
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="InternalApiError.Reason">
        <annotation>
          <documentation>
            The single reason for the internal API error.
          </documentation>
        </annotation>
        <restriction base="xsd:string">
          <enumeration value="UNEXPECTED_INTERNAL_API_ERROR">
            <annotation>
              <documentation>
                API encountered an unexpected internal error.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="TRANSIENT_ERROR">
            <annotation>
              <documentation>
                A temporary error occurred during the request. Please retry.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="UNKNOWN">
            <annotation>
              <documentation>
                The cause of the error is not known or only defined in newer versions.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="DOWNTIME">
            <annotation>
              <documentation>
                The API is currently unavailable for a planned downtime.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="ERROR_GENERATING_RESPONSE">
            <annotation>
              <documentation>
                Mutate succeeded but server was unable to build response. Client should not retry mutate.
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="Media.MediaType">
        <annotation>
          <documentation>
            Media types
          </documentation>
        </annotation>
        <restriction base="xsd:string">
          <enumeration value="AUDIO">
            <annotation>
              <documentation>
                Audio file.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="DYNAMIC_IMAGE">
            <annotation>
              <documentation>
                Animated image, such as animated GIF.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="ICON">
            <annotation>
              <documentation>
                Small image; used for map ad.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="IMAGE">
            <annotation>
              <documentation>
                Static image; for image ad.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="STANDARD_ICON">
            <annotation>
              <documentation>
                Predefined standard icon; used for map ads.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="VIDEO">
            <annotation>
              <documentation>
                Video file.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="MEDIA_BUNDLE">
            <annotation>
              <documentation>
                ZIP file; used in fields of template ads.
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="Media.LegacyMimeType">
        <annotation>
          <documentation>
            Mime types
          </documentation>
        </annotation>
        <restriction base="xsd:string">
          <enumeration value="IMAGE_JPEG">
            <annotation>
              <documentation>
                MIME type of image/jpeg
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="IMAGE_GIF">
            <annotation>
              <documentation>
                MIME type of image/gif
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="IMAGE_PNG">
            <annotation>
              <documentation>
                MIME type of image/png
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="FLASH">
            <annotation>
              <documentation>
                MIME type of application/x-shockwave-flash
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="TEXT_HTML">
            <annotation>
              <documentation>
                MIME type of text/html
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="PDF">
            <annotation>
              <documentation>
                MIME type of application/pdf
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="MSWORD">
            <annotation>
              <documentation>
                MIME type of application/msword
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="MSEXCEL">
            <annotation>
              <documentation>
                MIME type of application/vnd.ms-excel
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="RTF">
            <annotation>
              <documentation>
                MIME type of application/rtf
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="AUDIO_WAV">
            <annotation>
              <documentation>
                MIME type of audio/wav
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="AUDIO_MP3">
            <annotation>
              <documentation>
                MIME type of audio/mp3
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="HTML5_AD_ZIP">
            <annotation>
              <documentation>
                MIME type of application/x-html5-ad-zip
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="Media.Size">
        <annotation>
          <documentation>
            Sizes for retrieving the original media
          </documentation>
        </annotation>
        <restriction base="xsd:string">
          <enumeration value="FULL">
            <annotation>
              <documentation>
                Full size of Media.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="SHRUNKEN">
            <annotation>
              <documentation>
                Shunken size of media.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="PREVIEW">
            <annotation>
              <documentation>
                Preview size of media.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="VIDEO_THUMBNAIL">
            <annotation>
              <documentation>
                Video thumbnail size of Media.
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="MediaBundleError.Reason">
        <annotation>
          <documentation>
            Enumeration of the reasons for the {@link MediaBundleError}
          </documentation>
        </annotation>
        <restriction base="xsd:string">
          <enumeration value="ENTRY_POINT_CANNOT_BE_SET_USING_MEDIA_SERVICE">
            <annotation>
              <documentation>
                The entryPoint field cannot be set using the &lt;code&gt;MediaService&lt;/code&gt;.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="BAD_REQUEST">
            <annotation>
              <documentation>
                There was a problem with the request.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="DOUBLECLICK_BUNDLE_NOT_ALLOWED">
            <annotation>
              <documentation>
                HTML5 ads using DoubleClick Studio created ZIP files are not supported.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="EXTERNAL_URL_NOT_ALLOWED">
            <annotation>
              <documentation>
                Cannot reference URL external to the media bundle.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="FILE_TOO_LARGE">
            <annotation>
              <documentation>
                Media bundle file is too large.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="GOOGLE_WEB_DESIGNER_ZIP_FILE_NOT_PUBLISHED">
            <annotation>
              <documentation>
                ZIP file from Google Web Designer is not published.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="INVALID_INPUT">
            <annotation>
              <documentation>
                Input was invalid.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="INVALID_MEDIA_BUNDLE">
            <annotation>
              <documentation>
                There was a problem with the media bundle.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="INVALID_MEDIA_BUNDLE_ENTRY">
            <annotation>
              <documentation>
                There was a problem with one or more of the media bundle entries.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="INVALID_MIME_TYPE">
            <annotation>
              <documentation>
                The media bundle contains a file with an unknown mime type
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="INVALID_PATH">
            <annotation>
              <documentation>
                The media bundle contain an invalid asset path.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="INVALID_URL_REFERENCE">
            <annotation>
              <documentation>
                HTML5 ad is trying to reference an asset not in .ZIP file
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="MEDIA_DATA_TOO_LARGE">
            <annotation>
              <documentation>
                Media data is too large.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="MISSING_PRIMARY_MEDIA_BUNDLE_ENTRY">
            <annotation>
              <documentation>
                The media bundle contains no primary entry.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="SERVER_ERROR">
            <annotation>
              <documentation>
                There was an error on the server.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="STORAGE_ERROR">
            <annotation>
              <documentation>
                The image could not be stored.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="SWIFFY_BUNDLE_NOT_ALLOWED">
            <annotation>
              <documentation>
                Media bundle created with the Swiffy tool is not allowed.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="TOO_MANY_FILES">
            <annotation>
              <documentation>
                The media bundle contains too many files.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="UNEXPECTED_SIZE">
            <annotation>
              <documentation>
                The media bundle is not of legal dimensions.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="UNSUPPORTED_GOOGLE_WEB_DESIGNER_ENVIRONMENT">
            <annotation>
              <documentation>
                Google Web Designer not created for "AdWords" environment.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="UNSUPPORTED_HTML5_FEATURE">
            <annotation>
              <documentation>
                Unsupported HTML5 feature in HTML5 asset.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="URL_IN_MEDIA_BUNDLE_NOT_SSL_COMPLIANT">
            <annotation>
              <documentation>
                URL in HTML5 entry is not ssl compliant.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="CUSTOM_EXIT_NOT_ALLOWED">
            <annotation>
              <documentation>
                Custom exits not allowed in HTML5 entry.
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="MediaError.Reason">
        <annotation>
          <documentation>
            The reasons for the target error.
          </documentation>
        </annotation>
        <restriction base="xsd:string">
          <enumeration value="CANNOT_ADD_STANDARD_ICON">
            <annotation>
              <documentation>
                Cannot add a standard icon type
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="CANNOT_SELECT_STANDARD_ICON_WITH_OTHER_TYPES">
            <annotation>
              <documentation>
                May only select Standard Icons alone
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="CANNOT_SPECIFY_MEDIA_ID_AND_DATA">
            <annotation>
              <documentation>
                Image contains both a media ID and media data.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="DUPLICATE_MEDIA">
            <annotation>
              <documentation>
                A media with given type and reference id already exists
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="EMPTY_FIELD">
            <annotation>
              <documentation>
                A required field was not specified or is an empty string.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="ENTITY_REFERENCED_IN_MULTIPLE_OPS">
            <annotation>
              <documentation>
                A media may only be modified once per call
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="FIELD_NOT_SUPPORTED_FOR_MEDIA_SUB_TYPE">
            <annotation>
              <documentation>
                Field is not supported for the media sub type.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="INVALID_MEDIA_ID">
            <annotation>
              <documentation>
                The media id is invalid
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="INVALID_MEDIA_SUB_TYPE">
            <annotation>
              <documentation>
                The media subtype is invalid
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="INVALID_MEDIA_TYPE">
            <annotation>
              <documentation>
                The media type is invalid
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="INVALID_MIME_TYPE">
            <annotation>
              <documentation>
                The mimetype is invalid
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="INVALID_REFERENCE_ID">
            <annotation>
              <documentation>
                The media reference id is invalid
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="INVALID_YOU_TUBE_ID">
            <annotation>
              <documentation>
                The YouTube video id is invalid
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="MEDIA_FAILED_TRANSCODING">
            <annotation>
              <documentation>
                Media has failed transcoding
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="MEDIA_NOT_TRANSCODED">
            <annotation>
              <documentation>
                Media has not been transcoded
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="MEDIA_TYPE_DOES_NOT_MATCH_OBJECT_TYPE">
            <annotation>
              <documentation>
                The MediaType does not match the actual media object's type
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="NO_FIELDS_SPECIFIED">
            <annotation>
              <documentation>
                None of the fields have been specified.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="NULL_REFERENCE_ID_AND_MEDIA_ID">
            <annotation>
              <documentation>
                One of reference Id or media Id must be specified
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="TOO_LONG">
            <annotation>
              <documentation>
                The string has too many characters.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="UNSUPPORTED_OPERATION">
            <annotation>
              <documentation>
                The specified operation is not supported.  Only ADD, SET, and REMOVE
                are supported
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="UNSUPPORTED_TYPE">
            <annotation>
              <documentation>
                The specified type is not supported.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="YOU_TUBE_SERVICE_UNAVAILABLE">
            <annotation>
              <documentation>
                YouTube is unavailable for requesting video data.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="YOU_TUBE_VIDEO_HAS_NON_POSITIVE_DURATION">
            <annotation>
              <documentation>
                The YouTube video has a non positive duration.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="YOU_TUBE_VIDEO_NOT_FOUND">
            <annotation>
              <documentation>
                The YouTube video id is syntactically valid but the video was not found.
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="NewEntityCreationError.Reason">
        <restriction base="xsd:string">
          <enumeration value="CANNOT_SET_ID_FOR_ADD">
            <annotation>
              <documentation>
                Do not set the id field while creating new entities.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="DUPLICATE_TEMP_IDS">
            <annotation>
              <documentation>
                Creating more than one entity with the same temp ID is not allowed.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="TEMP_ID_ENTITY_HAD_ERRORS">
            <annotation>
              <documentation>
                Parent object with specified temp id failed validation, so no deep
                validation will be done for this child entity.
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="NotEmptyError.Reason">
        <annotation>
          <documentation>
            The reasons for the validation error.
          </documentation>
        </annotation>
        <restriction base="xsd:string">
          <enumeration value="EMPTY_LIST"/>
        </restriction>
      </simpleType>
      <simpleType name="NullError.Reason">
        <annotation>
          <documentation>
            The reasons for the validation error.
          </documentation>
        </annotation>
        <restriction base="xsd:string">
          <enumeration value="NULL_CONTENT">
            <annotation>
              <documentation>
                Specified list/container must not contain any null elements
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="OperationAccessDenied.Reason">
        <annotation>
          <documentation>
            The reasons for the operation access error.
          </documentation>
        </annotation>
        <restriction base="xsd:string">
          <enumeration value="ACTION_NOT_PERMITTED">
            <annotation>
              <documentation>
                Unauthorized invocation of a service's method (get, mutate, etc.)
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="ADD_OPERATION_NOT_PERMITTED">
            <annotation>
              <documentation>
                Unauthorized ADD operation in invoking a service's mutate method.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="REMOVE_OPERATION_NOT_PERMITTED">
            <annotation>
              <documentation>
                Unauthorized REMOVE operation in invoking a service's mutate method.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="SET_OPERATION_NOT_PERMITTED">
            <annotation>
              <documentation>
                Unauthorized SET operation in invoking a service's mutate method.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="MUTATE_ACTION_NOT_PERMITTED_FOR_CLIENT">
            <annotation>
              <documentation>
                A mutate action is not allowed on this campaign, from this client.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="OPERATION_NOT_PERMITTED_FOR_CAMPAIGN_TYPE">
            <annotation>
              <documentation>
                This operation is not permitted on this campaign type
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="ADD_AS_REMOVED_NOT_PERMITTED">
            <annotation>
              <documentation>
                An ADD operation may not set status to REMOVED.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="OPERATION_NOT_PERMITTED_FOR_REMOVED_ENTITY">
            <annotation>
              <documentation>
                This operation is not allowed because the campaign or adgroup is removed.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="OPERATION_NOT_PERMITTED_FOR_AD_GROUP_TYPE">
            <annotation>
              <documentation>
                This operation is not permitted on this ad group type.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="UNKNOWN">
            <annotation>
              <documentation>
                The reason the invoked method or operation is prohibited is not known
                (the client may be of an older version than the server).
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="OperatorError.Reason">
        <annotation>
          <documentation>
            The reasons for the validation error.
          </documentation>
        </annotation>
        <restriction base="xsd:string">
          <enumeration value="OPERATOR_NOT_SUPPORTED"/>
        </restriction>
      </simpleType>
      <simpleType name="Predicate.Operator">
        <annotation>
          <documentation>
            Defines the valid set of operators.
          </documentation>
        </annotation>
        <restriction base="xsd:string">
          <enumeration value="EQUALS">
            <annotation>
              <documentation>
                Checks if the field is equal to the given value.
                
                &lt;p&gt;This operator is used with integers, dates, booleans, strings,
                enums, and sets.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="NOT_EQUALS">
            <annotation>
              <documentation>
                Checks if the field does not equal the given value.
                
                &lt;p&gt;This operator is used with integers, booleans, strings, enums,
                and sets.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="IN">
            <annotation>
              <documentation>
                Checks if the field is equal to one of the given values.
                
                &lt;p&gt;This operator accepts multiple operands and is used with
                integers, booleans, strings, and enums.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="NOT_IN">
            <annotation>
              <documentation>
                Checks if the field does not equal any of the given values.
                
                &lt;p&gt;This operator accepts multiple operands and is used with
                integers, booleans, strings, and enums.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="GREATER_THAN">
            <annotation>
              <documentation>
                Checks if the field is greater than the given value.
                
                &lt;p&gt;This operator is used with numbers and dates.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="GREATER_THAN_EQUALS">
            <annotation>
              <documentation>
                Checks if the field is greater or equal to the given value.
                
                &lt;p&gt;This operator is used with numbers and dates.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="LESS_THAN">
            <annotation>
              <documentation>
                Checks if the field is less than the given value.
                
                &lt;p&gt;This operator is used with numbers and dates.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="LESS_THAN_EQUALS">
            <annotation>
              <documentation>
                Checks if the field is less or equal to than the given value.
                
                &lt;p&gt;This operator is used with numbers and dates.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="STARTS_WITH">
            <annotation>
              <documentation>
                Checks if the field starts with the given value.
                
                &lt;p&gt;This operator is used with strings.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="STARTS_WITH_IGNORE_CASE">
            <annotation>
              <documentation>
                Checks if the field starts with the given value, ignoring case.
                
                &lt;p&gt;This operator is used with strings.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="CONTAINS">
            <annotation>
              <documentation>
                Checks if the field contains the given value as a substring.
                
                &lt;p&gt;This operator is used with strings.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="CONTAINS_IGNORE_CASE">
            <annotation>
              <documentation>
                Checks if the field contains the given value as a substring, ignoring
                case.
                
                &lt;p&gt;This operator is used with strings.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="DOES_NOT_CONTAIN">
            <annotation>
              <documentation>
                Checks if the field does not contain the given value as a substring.
                
                &lt;p&gt;This operator is used with strings.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="DOES_NOT_CONTAIN_IGNORE_CASE">
            <annotation>
              <documentation>
                Checks if the field does not contain the given value as a substring,
                ignoring case.
                
                &lt;p&gt;This operator is used with strings.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="CONTAINS_ANY">
            <annotation>
              <documentation>
                Checks if the field contains &lt;em&gt;any&lt;/em&gt; of the given values.
                
                &lt;p&gt;This operator accepts multiple values and is used on sets of numbers
                or strings.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="CONTAINS_ALL">
            <annotation>
              <documentation>
                Checks if the field contains &lt;em&gt;all&lt;/em&gt; of the given values.
                
                &lt;p&gt;This operator accepts multiple values and is used on sets of numbers
                or strings.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="CONTAINS_NONE">
            <annotation>
              <documentation>
                Checks if the field contains &lt;em&gt;none&lt;/em&gt; of the given values.
                
                &lt;p&gt;This operator accepts multiple values and is used on sets of numbers
                or strings.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="UNKNOWN">
            <annotation>
              <documentation>
                &lt;span class="constraint Rejected"&gt;Used for return value only. An enumeration could not be processed, typically due to incompatibility with your WSDL version.&lt;/span&gt;
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="QueryError.Reason">
        <annotation>
          <documentation>
            The reason for the query error.
          </documentation>
        </annotation>
        <restriction base="xsd:string">
          <enumeration value="PARSING_FAILED">
            <annotation>
              <documentation>
                Exception that happens when trying to parse a query that doesn't match the AWQL grammar.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="MISSING_QUERY">
            <annotation>
              <documentation>
                The provided query is an empty string.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="MISSING_SELECT_CLAUSE">
            <annotation>
              <documentation>
                The query does not contain the required SELECT clause or it is not in the
                correct location.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="MISSING_FROM_CLAUSE">
            <annotation>
              <documentation>
                The query does not contain the required FROM clause or it is not in the correct location.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="INVALID_SELECT_CLAUSE">
            <annotation>
              <documentation>
                The SELECT clause could not be parsed.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="INVALID_FROM_CLAUSE">
            <annotation>
              <documentation>
                The FROM clause could not be parsed.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="INVALID_WHERE_CLAUSE">
            <annotation>
              <documentation>
                The WHERE clause could not be parsed.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="INVALID_ORDER_BY_CLAUSE">
            <annotation>
              <documentation>
                The ORDER BY clause could not be parsed.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="INVALID_LIMIT_CLAUSE">
            <annotation>
              <documentation>
                The LIMIT clause could not be parsed.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="INVALID_START_INDEX_IN_LIMIT_CLAUSE">
            <annotation>
              <documentation>
                The startIndex in the LIMIT clause does not contain a valid integer.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="INVALID_PAGE_SIZE_IN_LIMIT_CLAUSE">
            <annotation>
              <documentation>
                The pageSize in the LIMIT clause does not contain a valid integer.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="INVALID_DURING_CLAUSE">
            <annotation>
              <documentation>
                The DURING clause could not be parsed.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="INVALID_MIN_DATE_IN_DURING_CLAUSE">
            <annotation>
              <documentation>
                The minimum date in the DURING clause is not a valid date in YYYYMMDD format.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="INVALID_MAX_DATE_IN_DURING_CLAUSE">
            <annotation>
              <documentation>
                The maximum date in the DURING clause is not a valid date in YYYYMMDD format.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="MAX_LESS_THAN_MIN_IN_DURING_CLAUSE">
            <annotation>
              <documentation>
                The minimum date in the DURING is after the maximum date.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="VALIDATION_FAILED">
            <annotation>
              <documentation>
                The query matched the grammar, but is invalid in some way such as using a service that
                isn't supported.
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="QuotaCheckError.Reason">
        <annotation>
          <documentation>
            Enums for all the reasons an error can be thrown to the user during
            billing quota checks.
          </documentation>
        </annotation>
        <restriction base="xsd:string">
          <enumeration value="INVALID_TOKEN_HEADER">
            <annotation>
              <documentation>
                Customer passed in an invalid token in the header.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="ACCOUNT_DELINQUENT">
            <annotation>
              <documentation>
                Customer is marked delinquent.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="ACCOUNT_INACCESSIBLE">
            <annotation>
              <documentation>
                Customer is a fraudulent.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="ACCOUNT_INACTIVE">
            <annotation>
              <documentation>
                Inactive Account.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="INCOMPLETE_SIGNUP">
            <annotation>
              <documentation>
                Signup not complete
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="DEVELOPER_TOKEN_NOT_APPROVED">
            <annotation>
              <documentation>
                Developer token is not approved for production access, and the customer
                is attempting to access a production account.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="TERMS_AND_CONDITIONS_NOT_SIGNED">
            <annotation>
              <documentation>
                Terms and conditions are not signed.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="MONTHLY_BUDGET_REACHED">
            <annotation>
              <documentation>
                Monthly budget quota reached.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="QUOTA_EXCEEDED">
            <annotation>
              <documentation>
                Monthly budget quota exceeded.
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="RangeError.Reason">
        <annotation>
          <documentation>
            The reasons for the target error.
          </documentation>
        </annotation>
        <restriction base="xsd:string">
          <enumeration value="TOO_LOW"/>
          <enumeration value="TOO_HIGH"/>
        </restriction>
      </simpleType>
      <simpleType name="RateExceededError.Reason">
        <annotation>
          <documentation>
            The reason for the rate exceeded error.
          </documentation>
        </annotation>
        <restriction base="xsd:string">
          <enumeration value="RATE_EXCEEDED">
            <annotation>
              <documentation>
                Rate exceeded.
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="ReadOnlyError.Reason">
        <annotation>
          <documentation>
            The reasons for the target error.
          </documentation>
        </annotation>
        <restriction base="xsd:string">
          <enumeration value="READ_ONLY"/>
        </restriction>
      </simpleType>
      <simpleType name="RejectedError.Reason">
        <annotation>
          <documentation>
            The reasons for the target error.
          </documentation>
        </annotation>
        <restriction base="xsd:string">
          <enumeration value="UNKNOWN_VALUE">
            <annotation>
              <documentation>
                Unknown value encountered
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="RequestError.Reason">
        <restriction base="xsd:string">
          <enumeration value="UNKNOWN">
            <annotation>
              <documentation>
                Error reason is unknown.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="INVALID_INPUT">
            <annotation>
              <documentation>
                Invalid input.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="UNSUPPORTED_VERSION">
            <annotation>
              <documentation>
                The api version in the request has been discontinued. Please update
                to the new AdWords API version.
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="RequiredError.Reason">
        <annotation>
          <documentation>
            The reasons for the target error.
          </documentation>
        </annotation>
        <restriction base="xsd:string">
          <enumeration value="REQUIRED">
            <annotation>
              <documentation>
                Missing required field.
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="SelectorError.Reason">
        <annotation>
          <documentation>
            The reasons for the target error.
          </documentation>
        </annotation>
        <restriction base="xsd:string">
          <enumeration value="INVALID_FIELD_NAME">
            <annotation>
              <documentation>
                The field name is not valid.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="MISSING_FIELDS">
            <annotation>
              <documentation>
                The list of fields is null or empty.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="MISSING_PREDICATES">
            <annotation>
              <documentation>
                The list of predicates is null or empty.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="OPERATOR_DOES_NOT_SUPPORT_MULTIPLE_VALUES">
            <annotation>
              <documentation>
                Predicate operator does not support multiple values. Multiple values are
                supported only for {@link Predicate.Operator#IN} and {@link Predicate.Operator#NOT_IN}.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="INVALID_PREDICATE_ENUM_VALUE">
            <annotation>
              <documentation>
                The predicate enum value is not valid.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="MISSING_PREDICATE_OPERATOR">
            <annotation>
              <documentation>
                The predicate operator is empty.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="MISSING_PREDICATE_VALUES">
            <annotation>
              <documentation>
                The predicate values are empty.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="INVALID_PREDICATE_FIELD_NAME">
            <annotation>
              <documentation>
                The predicate field name is not valid.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="INVALID_PREDICATE_OPERATOR">
            <annotation>
              <documentation>
                The predicate operator is not valid.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="INVALID_FIELD_SELECTION">
            <annotation>
              <documentation>
                Invalid selection of fields.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="INVALID_PREDICATE_VALUE">
            <annotation>
              <documentation>
                The predicate value is not valid.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="INVALID_SORT_FIELD_NAME">
            <annotation>
              <documentation>
                The sort field name is not valid or the field is not sortable.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="SELECTOR_ERROR">
            <annotation>
              <documentation>
                Standard error.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="FILTER_BY_DATE_RANGE_NOT_SUPPORTED">
            <annotation>
              <documentation>
                Filtering by date range is not supported.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="START_INDEX_IS_TOO_HIGH">
            <annotation>
              <documentation>
                Selector paging start index is too high.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="TOO_MANY_PREDICATE_VALUES">
            <annotation>
              <documentation>
                The values list in a predicate was too long.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="UNKNOWN_ERROR">
            <annotation>
              <documentation>
                &lt;span class="constraint Rejected"&gt;Used for return value only. An enumeration could not be processed, typically due to incompatibility with your WSDL version.&lt;/span&gt;
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="SizeLimitError.Reason">
        <annotation>
          <documentation>
            The reasons for Ad Scheduling errors.
          </documentation>
        </annotation>
        <restriction base="xsd:string">
          <enumeration value="REQUEST_SIZE_LIMIT_EXCEEDED">
            <annotation>
              <documentation>
                The number of entries in the request exceeds the system limit.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="RESPONSE_SIZE_LIMIT_EXCEEDED">
            <annotation>
              <documentation>
                The number of entries in the response exceeds the system limit.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="INTERNAL_STORAGE_ERROR">
            <annotation>
              <documentation>
                The account is too large to load.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="UNKNOWN">
            <annotation>
              <documentation>
                &lt;span class="constraint Rejected"&gt;Used for return value only. An enumeration could not be processed, typically due to incompatibility with your WSDL version.&lt;/span&gt;
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="SortOrder">
        <annotation>
          <documentation>
            Possible orders of sorting.
          </documentation>
        </annotation>
        <restriction base="xsd:string">
          <enumeration value="ASCENDING"/>
          <enumeration value="DESCENDING"/>
        </restriction>
      </simpleType>
      <simpleType name="StringFormatError.Reason">
        <annotation>
          <documentation>
            The reasons for the target error.
          </documentation>
        </annotation>
        <restriction base="xsd:string">
          <enumeration value="UNKNOWN"/>
          <enumeration value="ILLEGAL_CHARS">
            <annotation>
              <documentation>
                The input string value contains disallowed characters.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="INVALID_FORMAT">
            <annotation>
              <documentation>
                The input string value is invalid for the associated field.
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="StringLengthError.Reason">
        <annotation>
          <documentation>
            The reasons for the target error.
          </documentation>
        </annotation>
        <restriction base="xsd:string">
          <enumeration value="TOO_SHORT"/>
          <enumeration value="TOO_LONG"/>
        </restriction>
      </simpleType>
      <simpleType name="VideoError.Reason">
        <restriction base="xsd:string">
          <enumeration value="INVALID_VIDEO">
            <annotation>
              <documentation>
                Invalid video.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="STORAGE_ERROR">
            <annotation>
              <documentation>
                Storage error.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="BAD_REQUEST">
            <annotation>
              <documentation>
                Bad request.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="ERROR_GENERATING_STREAMING_URL">
            <annotation>
              <documentation>
                Server error.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="UNEXPECTED_SIZE">
            <annotation>
              <documentation>
                Unexpected size.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="SERVER_ERROR">
            <annotation>
              <documentation>
                Server error.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="FILE_TOO_LARGE">
            <annotation>
              <documentation>
                File too large.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="VIDEO_PROCESSING_ERROR">
            <annotation>
              <documentation>
                Video processing error.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="INVALID_INPUT">
            <annotation>
              <documentation>
                Invalid input.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="PROBLEM_READING_FILE">
            <annotation>
              <documentation>
                Problem reading file.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="INVALID_ISCI">
            <annotation>
              <documentation>
                Invalid ISCI.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="INVALID_AD_ID">
            <annotation>
              <documentation>
                Invalid AD-ID.
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <element name="get">
        <annotation>
          <documentation>
            Returns a list of media that meet the criteria specified by the selector.
            &lt;p class="note"&gt;&lt;b&gt;Note:&lt;/b&gt; {@code MediaService} will not return any
            {@link ImageAd} image files.&lt;/p&gt;
            
            @param serviceSelector Selects which media objects to return.
            @return A list of {@code Media} objects.
          </documentation>
        </annotation>
        <complexType>
          <sequence>
            <element maxOccurs="1" minOccurs="0" name="serviceSelector" type="tns:Selector">
              <annotation>
                <documentation>
                  &lt;span class="constraint Required"&gt;This field is required and should not be {@code null}.&lt;/span&gt;
                </documentation>
              </annotation>
            </element>
          </sequence>
        </complexType>
      </element>
      <element name="getResponse">
        <complexType>
          <sequence>
            <element maxOccurs="1" minOccurs="0" name="rval" type="tns:MediaPage"/>
          </sequence>
        </complexType>
      </element>
      <element name="ApiExceptionFault" type="tns:ApiException">
        <annotation>
          <documentation>
            A fault element of type ApiException.
          </documentation>
        </annotation>
      </element>
      <element name="query">
        <annotation>
          <documentation>
            Returns the list of {@link Media} objects that match the query.
            
            @param query The SQL-like AWQL query string
            @returns A list of {@code Media} objects.
            @throws ApiException when the query is invalid or there are errors processing the request.
          </documentation>
        </annotation>
        <complexType>
          <sequence>
            <element maxOccurs="1" minOccurs="0" name="query" type="xsd:string">
              <annotation>
                <documentation>
                  &lt;span class="constraint Required"&gt;This field is required and should not be {@code null}.&lt;/span&gt;
                </documentation>
              </annotation>
            </element>
          </sequence>
        </complexType>
      </element>
      <element name="queryResponse">
        <complexType>
          <sequence>
            <element maxOccurs="1" minOccurs="0" name="rval" type="tns:MediaPage"/>
          </sequence>
        </complexType>
      </element>
      <element name="upload">
        <annotation>
          <documentation>
            Uploads new media. Currently, you can upload {@link Image} files and {@link MediaBundle}s.
            
            @param media A list of {@code Media} objects, each containing the data to
            be uploaded.
            @return A list of uploaded media in the same order as the argument list.
          </documentation>
        </annotation>
        <complexType>
          <sequence>
            <element maxOccurs="unbounded" minOccurs="0" name="media" type="tns:Media"/>
          </sequence>
        </complexType>
      </element>
      <element name="uploadResponse">
        <complexType>
          <sequence>
            <element maxOccurs="unbounded" minOccurs="0" name="rval" type="tns:Media"/>
          </sequence>
        </complexType>
      </element>
      <element name="RequestHeader" type="tns:SoapHeader"/>
      <element name="ResponseHeader" type="tns:SoapResponseHeader"/>
    </schema>
  </wsdl:types>
  <wsdl:message name="RequestHeader">
    <wsdl:part element="tns:RequestHeader" name="RequestHeader"/>
  </wsdl:message>
  <wsdl:message name="ResponseHeader">
    <wsdl:part element="tns:ResponseHeader" name="ResponseHeader"/>
  </wsdl:message>
  <wsdl:message name="getRequest">
    <wsdl:part element="tns:get" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getResponse">
    <wsdl:part element="tns:getResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="ApiException">
    <wsdl:part element="tns:ApiExceptionFault" name="ApiException"/>
  </wsdl:message>
  <wsdl:message name="queryRequest">
    <wsdl:part element="tns:query" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="queryResponse">
    <wsdl:part element="tns:queryResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="uploadRequest">
    <wsdl:part element="tns:upload" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="uploadResponse">
    <wsdl:part element="tns:uploadResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:portType name="MediaServiceInterface">
    <wsdl:documentation>
      Use this service to manage media.
    </wsdl:documentation>
    <wsdl:operation name="get">
      <wsdl:documentation>
        Returns a list of media that meet the criteria specified by the selector.
        &lt;p class="note"&gt;&lt;b&gt;Note:&lt;/b&gt; {@code MediaService} will not return any
        {@link ImageAd} image files.&lt;/p&gt;
        
        @param serviceSelector Selects which media objects to return.
        @return A list of {@code Media} objects.
      </wsdl:documentation>
      <wsdl:input message="tns:getRequest" name="getRequest"/>
      <wsdl:output message="tns:getResponse" name="getResponse"/>
      <wsdl:fault message="tns:ApiException" name="ApiException"/>
    </wsdl:operation>
    <wsdl:operation name="query">
      <wsdl:documentation>
        Returns the list of {@link Media} objects that match the query.
        
        @param query The SQL-like AWQL query string
        @returns A list of {@code Media} objects.
        @throws ApiException when the query is invalid or there are errors processing the request.
      </wsdl:documentation>
      <wsdl:input message="tns:queryRequest" name="queryRequest"/>
      <wsdl:output message="tns:queryResponse" name="queryResponse"/>
      <wsdl:fault message="tns:ApiException" name="ApiException"/>
    </wsdl:operation>
    <wsdl:operation name="upload">
      <wsdl:documentation>
        Uploads new media. Currently, you can upload {@link Image} files and {@link MediaBundle}s.
        
        @param media A list of {@code Media} objects, each containing the data to
        be uploaded.
        @return A list of uploaded media in the same order as the argument list.
      </wsdl:documentation>
      <wsdl:input message="tns:uploadRequest" name="uploadRequest"/>
      <wsdl:output message="tns:uploadResponse" name="uploadResponse"/>
      <wsdl:fault message="tns:ApiException" name="ApiException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="MediaServiceSoapBinding" type="tns:MediaServiceInterface">
    <wsdlsoap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="get">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getRequest">
        <wsdlsoap:header message="tns:RequestHeader"
          part="RequestHeader" use="literal"/>
        <wsdlsoap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getResponse">
        <wsdlsoap:header message="tns:ResponseHeader"
          part="ResponseHeader" use="literal"/>
        <wsdlsoap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ApiException">
        <wsdlsoap:fault name="ApiException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="query">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="queryRequest">
        <wsdlsoap:header message="tns:RequestHeader"
          part="RequestHeader" use="literal"/>
        <wsdlsoap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="queryResponse">
        <wsdlsoap:header message="tns:ResponseHeader"
          part="ResponseHeader" use="literal"/>
        <wsdlsoap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ApiException">
        <wsdlsoap:fault name="ApiException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="upload">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="uploadRequest">
        <wsdlsoap:header message="tns:RequestHeader"
          part="RequestHeader" use="literal"/>
        <wsdlsoap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="uploadResponse">
        <wsdlsoap:header message="tns:ResponseHeader"
          part="ResponseHeader" use="literal"/>
        <wsdlsoap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ApiException">
        <wsdlsoap:fault name="ApiException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="MediaService">
    <wsdl:port binding="tns:MediaServiceSoapBinding" name="MediaServiceInterfacePort">
      <wsdlsoap:address location="https://adwords.google.com/api/adwords/cm/v201809/MediaService"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>
