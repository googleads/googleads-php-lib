<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated file, do not edit -->
<!-- Copyright 2022 Google Inc. All Rights Reserved -->
<wsdl:definitions
  targetNamespace="https://www.google.com/apis/ads/publisher/v202111"
  xmlns:tns="https://www.google.com/apis/ads/publisher/v202111"
  xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
  xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <wsdl:types>
    <schema elementFormDefault="qualified" jaxb:version="1.0"
      targetNamespace="https://www.google.com/apis/ads/publisher/v202111"
      xmlns="http://www.w3.org/2001/XMLSchema"
      xmlns:jaxb="http://java.sun.com/xml/ns/jaxb" xmlns:tns="https://www.google.com/apis/ads/publisher/v202111">
      <annotation>
        <appinfo>
          <jaxb:globalBindings typesafeEnumMaxMembers="999999"/>
        </appinfo>
      </annotation>
      <complexType abstract="true" name="ObjectValue">
        <annotation>
          <documentation>
            Contains an object value.
            &lt;p&gt;
            &lt;b&gt;This object is experimental!
            &lt;code&gt;ObjectValue&lt;/code&gt; is an experimental, innovative, and rapidly
            changing new feature for Ad Manager. Unfortunately, being on the bleeding edge means that
            we may make backwards-incompatible changes to
            &lt;code&gt;ObjectValue&lt;/code&gt;. We will inform the community when this feature
            is no longer experimental.&lt;/b&gt;
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:Value">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType abstract="true" name="ApiError">
        <annotation>
          <documentation>
            The API error base class that provides details about an error that occurred
            while processing a service request.
            
            &lt;p&gt;The OGNL field path is provided for parsers to identify the request data
            element that may have caused the error.&lt;/p&gt;
          </documentation>
        </annotation>
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="fieldPath" type="xsd:string">
            <annotation>
              <documentation>
                The OGNL field path to identify cause of error.
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="unbounded" minOccurs="0"
            name="fieldPathElements" type="tns:FieldPathElement">
            <annotation>
              <documentation>
                A parsed copy of the field path. For example, the field path "operations[1].operand"
                corresponds to this list: {FieldPathElement(field = "operations", index = 1),
                FieldPathElement(field = "operand", index = null)}.
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="1" minOccurs="0" name="trigger" type="xsd:string">
            <annotation>
              <documentation>
                The data that caused the error.
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="1" minOccurs="0" name="errorString" type="xsd:string">
            <annotation>
              <documentation>
                A simple string representation of the error and reason.
              </documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="ApiException">
        <annotation>
          <documentation>
            Exception class for holding a list of service errors.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApplicationException">
            <sequence>
              <element maxOccurs="unbounded" minOccurs="0" name="errors" type="tns:ApiError">
                <annotation>
                  <documentation>
                    List of errors.
                  </documentation>
                </annotation>
              </element>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="ApiVersionError">
        <annotation>
          <documentation>
            Errors related to the usage of API versions.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:ApiVersionError.Reason"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="ApplicationException">
        <annotation>
          <documentation>
            Base class for exceptions.
          </documentation>
        </annotation>
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="message" type="xsd:string">
            <annotation>
              <documentation>
                Error message.
              </documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="AuthenticationError">
        <annotation>
          <documentation>
            An error for an exception that occurred when authenticating.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:AuthenticationError.Reason"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="BooleanValue">
        <annotation>
          <documentation>
            Contains a boolean value.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:Value">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="value" type="xsd:boolean">
                <annotation>
                  <documentation>
                    The boolean value.
                  </documentation>
                </annotation>
              </element>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="CmsContent">
        <annotation>
          <documentation>
            Contains information about {@link Content} from the CMS it was ingested from.
          </documentation>
        </annotation>
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="id" type="xsd:long">
            <annotation>
              <documentation>
                The ID of the Content Source associated with the CMS in Ad Manager.
                This attribute is read-only.
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="1" minOccurs="0" name="displayName" type="xsd:string">
            <annotation>
              <documentation>
                The display name of the CMS this content is in. This attribute is read-only.
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="1" minOccurs="0" name="cmsContentId" type="xsd:string">
            <annotation>
              <documentation>
                The ID of the {@link Content} in the CMS. This ID will be a 3rd party
                ID, usually the ID of the content in a CMS (Content Management System).
                This attribute is read-only.
              </documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="CollectionSizeError">
        <annotation>
          <documentation>
            Error for the size of the collection being too large
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:CollectionSizeError.Reason"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="CommonError">
        <annotation>
          <documentation>
            A place for common errors that can be used across services.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:CommonError.Reason"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="Content">
        <annotation>
          <documentation>
            A {@code Content} represents video metadata from a publisher's
            Content Management System (CMS) that has been synced to Ad Manager.
            &lt;p&gt;
            Video line items can be targeted to {@code Content}
            to indicate what ads should match when the {@code Content} is being played.
          </documentation>
        </annotation>
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="id" type="xsd:long">
            <annotation>
              <documentation>
                Uniquely identifies the {@code Content}. This attribute is read-only and
                is assigned by Google when the content is created.
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="1" minOccurs="0" name="name" type="xsd:string">
            <annotation>
              <documentation>
                The name of the {@code Content}. This attribute is read-only.
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="1" minOccurs="0" name="status" type="tns:ContentStatus">
            <annotation>
              <documentation>
                The status of this {@code Content}. This attribute is read-only.
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="1" minOccurs="0" name="statusDefinedBy" type="tns:ContentStatusDefinedBy">
            <annotation>
              <documentation>
                Whether the content status was defined by the user, or by the source CMS
                from which the content was ingested. This attribute is read-only.
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="1" minOccurs="0" name="hlsIngestStatus" type="tns:DaiIngestStatus">
            <annotation>
              <documentation>
                The current DAI ingest status of the HLS media for the {@code content}. This attribute is
                read-only and is null if the content is not eligible for dynamic ad insertion or if the content
                does not have HLS media.
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="unbounded" minOccurs="0"
            name="hlsIngestErrors" type="tns:DaiIngestError">
            <annotation>
              <documentation>
                The list of any errors that occurred during the most recent DAI ingestion process of the HLS
                media. This attribute is read-only and will be null if the {@link #hlsIngestStatus} is {@link
                DaiIngestStatus#STATUS_SUCCESS} or if the content is not eligible for dynamic ad insertion or
                if the content does not have HLS media.
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="1" minOccurs="0"
            name="lastHlsIngestDateTime" type="tns:DateTime">
            <annotation>
              <documentation>
                The date and time at which this content's HLS media was last ingested for DAI. This attribute
                is read-only and will be null if the content is not eligible for dynamic ad insertion or if the
                content does not have HLS media.
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="1" minOccurs="0" name="dashIngestStatus" type="tns:DaiIngestStatus">
            <annotation>
              <documentation>
                The current DAI ingest status of the DASH media for the {@code content}. This attribute is
                read-only and is null if the content is not eligible for dynamic ad insertion or if the content
                does not have DASH media.
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="unbounded" minOccurs="0"
            name="dashIngestErrors" type="tns:DaiIngestError">
            <annotation>
              <documentation>
                The list of any errors that occurred during the most recent DAI ingestion process of the DASH
                media. This attribute is read-only and will be null if the {@link #hlsIngestStatus} is {@link
                DaiIngestStatus#STATUS_SUCCESS} or if the content is not eligible for dynamic ad insertion or
                if the content does not have DASH media.
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="1" minOccurs="0"
            name="lastDashIngestDateTime" type="tns:DateTime">
            <annotation>
              <documentation>
                The date and time at which this content's DASH media was last ingested for DAI. This attribute
                is read-only and will be null if the content is not eligible for dynamic ad insertion or if the
                content does not have DASH media.
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="1" minOccurs="0" name="importDateTime" type="tns:DateTime">
            <annotation>
              <documentation>
                The date and time at which this content was published. This attribute is read-only.
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="1" minOccurs="0"
            name="lastModifiedDateTime" type="tns:DateTime">
            <annotation>
              <documentation>
                The date and time at which this content was last modified. The last modified date time will
                always be updated when a {@link ContentBundle} association is changed, but will not always be
                updated when a {@link CmsMetadataValue} value is changed.
                This attribute is read-only.
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="unbounded" minOccurs="0" name="cmsSources" type="tns:CmsContent">
            <annotation>
              <documentation>
                Information about the content from the CMS it was ingested from.
                This attribute is read-only.
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="unbounded" minOccurs="0"
            name="contentBundleIds" type="xsd:long">
            <annotation>
              <documentation>
                IDs of the {@link ContentBundle} of which this content is a member.
                This attribute is read-only.
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="unbounded" minOccurs="0"
            name="cmsMetadataValueIds" type="xsd:long">
            <annotation>
              <documentation>
                A collection of {@link CmsMetadataValue} IDs that are associated with this content.
                This attribute is read-only.
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="1" minOccurs="0" name="duration" type="xsd:long">
            <annotation>
              <documentation>
                The duration of the content in milliseconds.
                This attribute is read-only.
              </documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="ContentPage">
        <annotation>
          <documentation>
            Captures a page of {@code Content} objects.
          </documentation>
        </annotation>
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="totalResultSetSize" type="xsd:int">
            <annotation>
              <documentation>
                The size of the total result set to which this page belongs.
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="1" minOccurs="0" name="startIndex" type="xsd:int">
            <annotation>
              <documentation>
                The absolute index in the total result set on which this page begins.
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="unbounded" minOccurs="0" name="results" type="tns:Content">
            <annotation>
              <documentation>
                The collection of content contained within this page.
              </documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="DaiIngestError">
        <annotation>
          <documentation>
            Represents an error associated with a DAI content's status.
          </documentation>
        </annotation>
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="reason" type="tns:DaiIngestErrorReason">
            <annotation>
              <documentation>
                The error associated with the content.
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="1" minOccurs="0" name="trigger" type="xsd:string">
            <annotation>
              <documentation>
                The field, if any, that triggered the error.
              </documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="Date">
        <annotation>
          <documentation>
            Represents a date.
          </documentation>
        </annotation>
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="year" type="xsd:int">
            <annotation>
              <documentation>
                Year (e.g., 2009)
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="1" minOccurs="0" name="month" type="xsd:int">
            <annotation>
              <documentation>
                Month (1..12)
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="1" minOccurs="0" name="day" type="xsd:int">
            <annotation>
              <documentation>
                Day (1..31)
              </documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="DateTime">
        <annotation>
          <documentation>
            Represents a date combined with the time of day.
          </documentation>
        </annotation>
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="date" type="tns:Date"/>
          <element maxOccurs="1" minOccurs="0" name="hour" type="xsd:int"/>
          <element maxOccurs="1" minOccurs="0" name="minute" type="xsd:int"/>
          <element maxOccurs="1" minOccurs="0" name="second" type="xsd:int"/>
          <element maxOccurs="1" minOccurs="0" name="timeZoneId" type="xsd:string"/>
        </sequence>
      </complexType>
      <complexType name="DateTimeValue">
        <annotation>
          <documentation>
            Contains a date-time value.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:Value">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="value" type="tns:DateTime">
                <annotation>
                  <documentation>
                    The {@code DateTime} value.
                  </documentation>
                </annotation>
              </element>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="DateValue">
        <annotation>
          <documentation>
            Contains a date value.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:Value">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="value" type="tns:Date">
                <annotation>
                  <documentation>
                    The {@code Date} value.
                  </documentation>
                </annotation>
              </element>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="FeatureError">
        <annotation>
          <documentation>
            Errors related to feature management.  If you attempt using a feature that is not available to
            the current network you'll receive a FeatureError with the missing feature as the trigger.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:FeatureError.Reason"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="FieldPathElement">
        <annotation>
          <documentation>
            A segment of a field path. Each dot in a field path defines a new segment.
          </documentation>
        </annotation>
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="field" type="xsd:string">
            <annotation>
              <documentation>
                The name of a field in lower camelcase. (e.g. "biddingStrategy")
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="1" minOccurs="0" name="index" type="xsd:int">
            <annotation>
              <documentation>
                For list fields, this is a 0-indexed position in the list. Null for non-list fields.
              </documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="InternalApiError">
        <annotation>
          <documentation>
            Indicates that a server-side error has occured. {@code InternalApiError}s
            are generally not the result of an invalid request or message sent by the
            client.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:InternalApiError.Reason">
                <annotation>
                  <documentation>
                    The error reason represented by an enum.
                  </documentation>
                </annotation>
              </element>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="InvalidUrlError">
        <annotation>
          <documentation>
            Lists all errors associated with URLs.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:InvalidUrlError.Reason"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="NotNullError">
        <annotation>
          <documentation>
            Caused by supplying a null value for an attribute that cannot be null.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:NotNullError.Reason">
                <annotation>
                  <documentation>
                    The error reason represented by an enum.
                  </documentation>
                </annotation>
              </element>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="NumberValue">
        <annotation>
          <documentation>
            Contains a numeric value.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:Value">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="value" type="xsd:string">
                <annotation>
                  <documentation>
                    The numeric value represented as a string.
                  </documentation>
                </annotation>
              </element>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="ParseError">
        <annotation>
          <documentation>
            Lists errors related to parsing.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:ParseError.Reason">
                <annotation>
                  <documentation>
                    The error reason represented by an enum.
                  </documentation>
                </annotation>
              </element>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="PermissionError">
        <annotation>
          <documentation>
            Errors related to incorrect permission.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:PermissionError.Reason"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="PublisherQueryLanguageContextError">
        <annotation>
          <documentation>
            An error that occurs while executing a PQL query contained in
            a {@link Statement} object.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:PublisherQueryLanguageContextError.Reason">
                <annotation>
                  <documentation>
                    The error reason represented by an enum.
                  </documentation>
                </annotation>
              </element>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="PublisherQueryLanguageSyntaxError">
        <annotation>
          <documentation>
            An error that occurs while parsing a PQL query contained in a
            {@link Statement} object.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:PublisherQueryLanguageSyntaxError.Reason">
                <annotation>
                  <documentation>
                    The error reason represented by an enum.
                  </documentation>
                </annotation>
              </element>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="QuotaError">
        <annotation>
          <documentation>
            Describes a client-side error on which a user is attempting
            to perform an action to which they have no quota remaining.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:QuotaError.Reason"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="RequiredCollectionError">
        <annotation>
          <documentation>
            A list of all errors to be used for validating sizes of collections.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:RequiredCollectionError.Reason"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="RequiredError">
        <annotation>
          <documentation>
            Errors due to missing required field.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:RequiredError.Reason">
                <annotation>
                  <documentation>
                    The error reason represented by an enum.
                  </documentation>
                </annotation>
              </element>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="RequiredNumberError">
        <annotation>
          <documentation>
            A list of all errors to be used in conjunction with required number
            validators.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:RequiredNumberError.Reason"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="ServerError">
        <annotation>
          <documentation>
            Errors related to the server.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:ServerError.Reason"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="SetValue">
        <annotation>
          <documentation>
            Contains a set of {@link Value Values}. May not contain duplicates.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:Value">
            <sequence>
              <element maxOccurs="unbounded" minOccurs="0" name="values" type="tns:Value">
                <annotation>
                  <documentation>
                    The values. They must all be the same type of {@code Value} and not contain duplicates.
                  </documentation>
                </annotation>
              </element>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="SoapRequestHeader">
        <annotation>
          <documentation>
            Represents the SOAP request header used by API requests.
          </documentation>
        </annotation>
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="networkCode" type="xsd:string">
            <annotation>
              <documentation>
                The network code to use in the context of a request.
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="1" minOccurs="0" name="applicationName" type="xsd:string">
            <annotation>
              <documentation>
                The name of client library application.
              </documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="SoapResponseHeader">
        <annotation>
          <documentation>
            Represents the SOAP request header used by API responses.
          </documentation>
        </annotation>
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="requestId" type="xsd:string"/>
          <element maxOccurs="1" minOccurs="0" name="responseTime" type="xsd:long"/>
        </sequence>
      </complexType>
      <complexType name="Statement">
        <annotation>
          <documentation>
            Captures the {@code WHERE}, {@code ORDER BY} and {@code LIMIT} clauses of a
            PQL query. Statements are typically used to retrieve objects of a predefined
            domain type, which makes SELECT clause unnecessary.
            &lt;p&gt;
            An example query text might be {@code "WHERE status = 'ACTIVE' ORDER BY id
            LIMIT 30"}.
            &lt;/p&gt;
            &lt;p&gt;
            Statements support bind variables. These are substitutes for literals
            and can be thought of as input parameters to a PQL query.
            &lt;/p&gt;
            &lt;p&gt;
            An example of such a query might be {@code "WHERE id = :idValue"}.
            &lt;/p&gt;
            &lt;p&gt;
            Statements also support use of the LIKE keyword. This provides wildcard string matching.
            &lt;/p&gt;
            &lt;p&gt;
            An example of such a query might be {@code "WHERE name LIKE '%searchString%'"}.
            &lt;/p&gt;
            The value for the variable idValue must then be set with an object of type
            {@link Value}, e.g., {@link NumberValue}, {@link TextValue} or
            {@link BooleanValue}.
          </documentation>
        </annotation>
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="query" type="xsd:string">
            <annotation>
              <documentation>
                Holds the query in PQL syntax. The syntax is:&lt;br&gt;
                &lt;code&gt;[WHERE &lt;condition&gt; {[AND | OR] &lt;condition&gt; ...}]&lt;/code&gt;&lt;br&gt;
                &lt;code&gt;[ORDER BY &lt;property&gt; [ASC | DESC]]&lt;/code&gt;&lt;br&gt;
                &lt;code&gt;[LIMIT {[&lt;offset&gt;,] &lt;count&gt;} | {&lt;count&gt; OFFSET &lt;offset&gt;}]&lt;/code&gt;&lt;br&gt;
                &lt;p&gt;
                &lt;code&gt;&lt;condition&gt;&lt;/code&gt;&lt;br&gt;
                &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
                &lt;code&gt;:= &lt;property&gt; {&lt; | &lt;= | &gt; | &gt;= | = | != } &lt;value&gt;&lt;/code&gt;&lt;br&gt;
                &lt;code&gt;&lt;condition&gt;&lt;/code&gt;&lt;br&gt;
                &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
                &lt;code&gt;:= &lt;property&gt; {&lt; | &lt;= | &gt; | &gt;= | = | != } &lt;bind variable&gt;&lt;/code&gt;&lt;br&gt;
                &lt;code&gt;&lt;condition&gt; := &lt;property&gt; IN &lt;list&gt;&lt;/code&gt;&lt;br&gt;
                &lt;code&gt;&lt;condition&gt; := &lt;property&gt; IS NULL&lt;/code&gt;&lt;br&gt;
                &lt;code&gt;&lt;condition&gt; := &lt;property&gt; LIKE &lt;wildcard%match&gt;&lt;/code&gt;&lt;br&gt;
                &lt;code&gt;&lt;bind variable&gt; := :&lt;name&gt;&lt;/code&gt;&lt;br&gt;
                &lt;/p&gt;
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="unbounded" minOccurs="0" name="values" type="tns:String_ValueMapEntry">
            <annotation>
              <documentation>
                Holds keys and values for bind variables and their values. The key is the
                name of the bind variable. The value is the literal value of the variable.
                &lt;p&gt;
                In the example {@code "WHERE status = :bindStatus ORDER BY id LIMIT 30"},
                the bind variable, represented by {@code :bindStatus} is named {@code
                bindStatus}, which would also be the parameter map key. The bind variable's
                value would be represented by a parameter map value of type
                {@link TextValue}. The final result, for example, would be an entry of
                {@code "bindStatus" =&gt; StringParam("ACTIVE")}.
                &lt;/p&gt;
              </documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="StatementError">
        <annotation>
          <documentation>
            An error that occurs while parsing {@link Statement} objects.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:StatementError.Reason">
                <annotation>
                  <documentation>
                    The error reason represented by an enum.
                  </documentation>
                </annotation>
              </element>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="StringFormatError">
        <annotation>
          <documentation>
            A list of error code for reporting invalid content of input strings.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:StringFormatError.Reason"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="StringLengthError">
        <annotation>
          <documentation>
            Errors for Strings which do not meet given length constraints.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:StringLengthError.Reason"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="String_ValueMapEntry">
        <annotation>
          <documentation>
            This represents an entry in a map with a key of type String
            and value of type Value.
          </documentation>
        </annotation>
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="key" type="xsd:string"/>
          <element maxOccurs="1" minOccurs="0" name="value" type="tns:Value"/>
        </sequence>
      </complexType>
      <complexType name="TextValue">
        <annotation>
          <documentation>
            Contains a string value.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:Value">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="value" type="xsd:string">
                <annotation>
                  <documentation>
                    The string value.
                  </documentation>
                </annotation>
              </element>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="TypeError">
        <annotation>
          <documentation>
            An error for a field which is an invalid type.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApiError">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType abstract="true" name="Value">
        <annotation>
          <documentation>
            {@code Value} represents a value.
          </documentation>
        </annotation>
        <sequence/>
      </complexType>
      <simpleType name="ApiVersionError.Reason">
        <restriction base="xsd:string">
          <enumeration value="UPDATE_TO_NEWER_VERSION">
            <annotation>
              <documentation>
                Indicates that the operation is not allowed in the version the request
                was made in.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="UNKNOWN">
            <annotation>
              <documentation>
                The value returned if the actual value is not exposed by the requested API version.
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="AuthenticationError.Reason">
        <restriction base="xsd:string">
          <enumeration value="AMBIGUOUS_SOAP_REQUEST_HEADER">
            <annotation>
              <documentation>
                The SOAP message contains a request header with an ambiguous definition of the authentication
                header fields. This means either the {@code authToken} and {@code oAuthToken} fields were
                both null or both were specified. Exactly one value should be specified with each request.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="INVALID_EMAIL">
            <annotation>
              <documentation>
                The login provided is invalid.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="AUTHENTICATION_FAILED">
            <annotation>
              <documentation>
                Tried to authenticate with provided information, but failed.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="INVALID_OAUTH_SIGNATURE">
            <annotation>
              <documentation>
                The OAuth provided is invalid.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="INVALID_SERVICE">
            <annotation>
              <documentation>
                The specified service to use was not recognized.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="MISSING_SOAP_REQUEST_HEADER">
            <annotation>
              <documentation>
                The SOAP message is missing a request header with an {@code authToken} and optional {@code
                networkCode}.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="MISSING_AUTHENTICATION_HTTP_HEADER">
            <annotation>
              <documentation>
                The HTTP request is missing a request header with an {@code authToken}
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="MISSING_AUTHENTICATION">
            <annotation>
              <documentation>
                The request is missing an {@code authToken}
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="NETWORK_API_ACCESS_DISABLED">
            <annotation>
              <documentation>
                The network does not have API access enabled.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="NO_NETWORKS_TO_ACCESS">
            <annotation>
              <documentation>
                The user is not associated with any network.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="NETWORK_NOT_FOUND">
            <annotation>
              <documentation>
                No network for the given {@code networkCode} was found.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="NETWORK_CODE_REQUIRED">
            <annotation>
              <documentation>
                The user has access to more than one network, but did not provide a {@code networkCode}.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="CONNECTION_ERROR">
            <annotation>
              <documentation>
                An error happened on the server side during connection to authentication service.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="GOOGLE_ACCOUNT_ALREADY_ASSOCIATED_WITH_NETWORK">
            <annotation>
              <documentation>
                The user tried to create a test network using an account that already is associated with a
                network.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="UNDER_INVESTIGATION">
            <annotation>
              <documentation>
                The account is blocked and under investigation by the collections team. Please contact Google
                for more information.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="UNKNOWN">
            <annotation>
              <documentation>
                The value returned if the actual value is not exposed by the requested API version.
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="CollectionSizeError.Reason">
        <restriction base="xsd:string">
          <enumeration value="TOO_LARGE"/>
          <enumeration value="UNKNOWN">
            <annotation>
              <documentation>
                The value returned if the actual value is not exposed by the requested API version.
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="CommonError.Reason">
        <annotation>
          <documentation>
            Describes reasons for common errors
          </documentation>
        </annotation>
        <restriction base="xsd:string">
          <enumeration value="NOT_FOUND">
            <annotation>
              <documentation>
                Indicates that an attempt was made to retrieve an entity that does not
                exist.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="ALREADY_EXISTS">
            <annotation>
              <documentation>
                Indicates that an attempt was made to create an entity that already
                exists.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="NOT_APPLICABLE">
            <annotation>
              <documentation>
                Indicates that a value is not applicable for given use case.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="DUPLICATE_OBJECT">
            <annotation>
              <documentation>
                Indicates that two elements in the collection were identical.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="CANNOT_UPDATE">
            <annotation>
              <documentation>
                Indicates that an attempt was made to change an immutable field.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="UNSUPPORTED_OPERATION">
            <annotation>
              <documentation>
                Indicates that the requested operation is not supported.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="CONCURRENT_MODIFICATION">
            <annotation>
              <documentation>
                Indicates that another request attempted to update the same data in the same network
                at about the same time. Please wait and try the request again.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="UNKNOWN">
            <annotation>
              <documentation>
                The value returned if the actual value is not exposed by the requested API version.
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="ContentStatus">
        <annotation>
          <documentation>
            Describes the status of a {@link Content} object.
          </documentation>
        </annotation>
        <restriction base="xsd:string">
          <enumeration value="ACTIVE">
            <annotation>
              <documentation>
                Indicates the {@link Content} has been created and is eligible to have
                ads served against it.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="INACTIVE">
            <annotation>
              <documentation>
                Indicates the {@link Content} has been deactivated and cannot have ads
                served against it.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="ARCHIVED">
            <annotation>
              <documentation>
                Indicates the {@link Content} has been archived; user-visible.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="UNKNOWN">
            <annotation>
              <documentation>
                The value returned if the actual value is not exposed by the requested API version.
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="FeatureError.Reason">
        <restriction base="xsd:string">
          <enumeration value="MISSING_FEATURE">
            <annotation>
              <documentation>
                A feature is being used that is not enabled on the current network.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="UNKNOWN">
            <annotation>
              <documentation>
                The value returned if the actual value is not exposed by the requested API version.
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="InternalApiError.Reason">
        <annotation>
          <documentation>
            The single reason for the internal API error.
          </documentation>
        </annotation>
        <restriction base="xsd:string">
          <enumeration value="UNEXPECTED_INTERNAL_API_ERROR">
            <annotation>
              <documentation>
                API encountered an unexpected internal error.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="TRANSIENT_ERROR">
            <annotation>
              <documentation>
                A temporary error occurred during the request. Please retry.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="UNKNOWN">
            <annotation>
              <documentation>
                The cause of the error is not known or only defined in newer versions.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="DOWNTIME">
            <annotation>
              <documentation>
                The API is currently unavailable for a planned downtime.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="ERROR_GENERATING_RESPONSE">
            <annotation>
              <documentation>
                Mutate succeeded but server was unable to build response. Client should not retry mutate.
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="InvalidUrlError.Reason">
        <restriction base="xsd:string">
          <enumeration value="ILLEGAL_CHARACTERS">
            <annotation>
              <documentation>
                The URL contains invalid characters.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="INVALID_FORMAT">
            <annotation>
              <documentation>
                The format of the URL is not allowed. This could occur for a number of
                reasons. For example, if an invalid scheme is specified (like "ftp://")
                or if a port is specified when not required, or if a query was specified
                when not required.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="INSECURE_SCHEME">
            <annotation>
              <documentation>
                URL contains insecure scheme.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="NO_SCHEME">
            <annotation>
              <documentation>
                The URL does not contain a scheme.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="UNKNOWN">
            <annotation>
              <documentation>
                The value returned if the actual value is not exposed by the requested API version.
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="NotNullError.Reason">
        <annotation>
          <documentation>
            The reasons for the target error.
          </documentation>
        </annotation>
        <restriction base="xsd:string">
          <enumeration value="ARG1_NULL">
            <annotation>
              <documentation>
                Assuming that a method will not have more than 3 arguments, if it does,
                return NULL
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="ARG2_NULL"/>
          <enumeration value="ARG3_NULL"/>
          <enumeration value="NULL"/>
          <enumeration value="UNKNOWN">
            <annotation>
              <documentation>
                The value returned if the actual value is not exposed by the requested API version.
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="ParseError.Reason">
        <annotation>
          <documentation>
            The reasons for the target error.
          </documentation>
        </annotation>
        <restriction base="xsd:string">
          <enumeration value="UNPARSABLE">
            <annotation>
              <documentation>
                Indicates an error in parsing an attribute.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="UNKNOWN">
            <annotation>
              <documentation>
                The value returned if the actual value is not exposed by the requested API version.
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="PermissionError.Reason">
        <annotation>
          <documentation>
            Describes reasons for permission errors.
          </documentation>
        </annotation>
        <restriction base="xsd:string">
          <enumeration value="PERMISSION_DENIED">
            <annotation>
              <documentation>
                User does not have the required permission for the request.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="UNKNOWN">
            <annotation>
              <documentation>
                The value returned if the actual value is not exposed by the requested API version.
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="PublisherQueryLanguageContextError.Reason">
        <annotation>
          <documentation>
            The reasons for the target error.
          </documentation>
        </annotation>
        <restriction base="xsd:string">
          <enumeration value="UNEXECUTABLE">
            <annotation>
              <documentation>
                Indicates that there was an error executing the PQL.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="UNKNOWN">
            <annotation>
              <documentation>
                The value returned if the actual value is not exposed by the requested API version.
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="PublisherQueryLanguageSyntaxError.Reason">
        <annotation>
          <documentation>
            The reasons for the target error.
          </documentation>
        </annotation>
        <restriction base="xsd:string">
          <enumeration value="UNPARSABLE">
            <annotation>
              <documentation>
                Indicates that there was a PQL syntax error.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="UNKNOWN">
            <annotation>
              <documentation>
                The value returned if the actual value is not exposed by the requested API version.
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="QuotaError.Reason">
        <restriction base="xsd:string">
          <enumeration value="EXCEEDED_QUOTA">
            <annotation>
              <documentation>
                The number of requests made per second is too high and has exceeded the
                allowable limit. The recommended approach to handle this error is to wait
                about 5 seconds and then retry the request. Note that this does not
                guarantee the request will succeed. If it fails again, try increasing the
                wait time.
                &lt;p&gt;Another way to mitigate this error is to limit requests to 8 per second for Ad Manager
                360 accounts, or 2 per second for Ad Manager accounts. Once again
                this does not guarantee that every request will succeed, but may help
                reduce the number of times you receive this error.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="UNKNOWN">
            <annotation>
              <documentation>
                The value returned if the actual value is not exposed by the requested API version.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="REPORT_JOB_LIMIT">
            <annotation>
              <documentation>
                This user has exceeded the allowed number of new report requests per hour
                (this includes both reports run via the UI and reports
                run via {@link ReportService#runReportJob}).
                The recommended approach to handle this error is to wait about 10 minutes
                and then retry the request. Note that this does not guarantee the request
                will succeed. If it fails again, try increasing the wait time.
                &lt;p&gt;Another way to mitigate this error is to limit the number of new report
                requests to 250 per hour per user. Once again, this does not guarantee that
                every request will succeed, but may help reduce the number of times you
                receive this error.
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="RequiredCollectionError.Reason">
        <restriction base="xsd:string">
          <enumeration value="REQUIRED">
            <annotation>
              <documentation>
                A required collection is missing.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="TOO_LARGE">
            <annotation>
              <documentation>
                Collection size is too large.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="TOO_SMALL">
            <annotation>
              <documentation>
                Collection size is too small.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="UNKNOWN">
            <annotation>
              <documentation>
                The value returned if the actual value is not exposed by the requested API version.
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="RequiredError.Reason">
        <annotation>
          <documentation>
            The reasons for the target error.
          </documentation>
        </annotation>
        <restriction base="xsd:string">
          <enumeration value="REQUIRED">
            <annotation>
              <documentation>
                Missing required field.
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="RequiredNumberError.Reason">
        <annotation>
          <documentation>
            Describes reasons for a number to be invalid.
          </documentation>
        </annotation>
        <restriction base="xsd:string">
          <enumeration value="REQUIRED"/>
          <enumeration value="TOO_LARGE"/>
          <enumeration value="TOO_SMALL"/>
          <enumeration value="TOO_LARGE_WITH_DETAILS"/>
          <enumeration value="TOO_SMALL_WITH_DETAILS"/>
          <enumeration value="UNKNOWN">
            <annotation>
              <documentation>
                The value returned if the actual value is not exposed by the requested API version.
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="ServerError.Reason">
        <annotation>
          <documentation>
            Describes reasons for server errors
          </documentation>
        </annotation>
        <restriction base="xsd:string">
          <enumeration value="SERVER_ERROR">
            <annotation>
              <documentation>
                Indicates that an unexpected error occured.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="SERVER_BUSY">
            <annotation>
              <documentation>
                Indicates that the server is currently experiencing a high load. Please
                wait and try your request again.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="UNKNOWN">
            <annotation>
              <documentation>
                The value returned if the actual value is not exposed by the requested API version.
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="StatementError.Reason">
        <restriction base="xsd:string">
          <enumeration value="VARIABLE_NOT_BOUND_TO_VALUE">
            <annotation>
              <documentation>
                A bind variable has not been bound to a value.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="UNKNOWN">
            <annotation>
              <documentation>
                The value returned if the actual value is not exposed by the requested API version.
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="ContentStatusDefinedBy">
        <annotation>
          <documentation>
            Describes who defined the effective status of the {@code Content}.
          </documentation>
        </annotation>
        <restriction base="xsd:string">
          <enumeration value="CMS">
            <annotation>
              <documentation>
                Indicates that the status of the {@code Content} is defined by the CMS.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="USER">
            <annotation>
              <documentation>
                Indicates that the status of the {@code Content} is defined by the user.
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="StringFormatError.Reason">
        <annotation>
          <documentation>
            The reasons for the target error.
          </documentation>
        </annotation>
        <restriction base="xsd:string">
          <enumeration value="UNKNOWN"/>
          <enumeration value="ILLEGAL_CHARS">
            <annotation>
              <documentation>
                The input string value contains disallowed characters.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="INVALID_FORMAT">
            <annotation>
              <documentation>
                The input string value is invalid for the associated field.
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="StringLengthError.Reason">
        <restriction base="xsd:string">
          <enumeration value="TOO_LONG"/>
          <enumeration value="TOO_SHORT"/>
          <enumeration value="UNKNOWN">
            <annotation>
              <documentation>
                The value returned if the actual value is not exposed by the requested API version.
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="DaiIngestErrorReason">
        <annotation>
          <documentation>
            Describes what caused the DAI content to fail during the ingestion process.
          </documentation>
        </annotation>
        <restriction base="xsd:string">
          <enumeration value="INVALID_INGEST_URL">
            <annotation>
              <documentation>
                The ingest URL provided in the publisher's content source feed is invalid. The trigger for this
                error is the ingest URL specified in the publisher's feed.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="INVALID_CLOSED_CAPTION_URL">
            <annotation>
              <documentation>
                The closed caption URL provided in the publisher's content source feed is invalid. The trigger
                for this error is the closed caption URL specified in the publisher's feed.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="MISSING_CLOSED_CAPTION_URL">
            <annotation>
              <documentation>
                There is no closed caption URL for a content in the publisher's content source feed. There is
                no trigger for this error.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="COULD_NOT_FETCH_HLS">
            <annotation>
              <documentation>
                There was an error while trying to fetch the HLS from the specified ingest URL. The trigger for
                this error is the ingest URL specified in the publisher's feed.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="COULD_NOT_FETCH_SUBTITLES">
            <annotation>
              <documentation>
                There was an error while trying to fetch the subtitles from the specified closed caption url.
                The trigger for this error is the closed caption URL specified in the publisher's feed.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="MISSING_SUBTITLE_LANGUAGE">
            <annotation>
              <documentation>
                One of the subtitles from the closed caption URL is missing a language. The trigger for this
                error is the closed caption URL that does not have a language associated with it.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="COULD_NOT_FETCH_MEDIA">
            <annotation>
              <documentation>
                Error fetching the media files from the URLs specified in the master HLS playlist. The trigger
                for this error is a media playlist URL within the publisher's HLS playlist that could not be
                fetched.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="MALFORMED_MEDIA_BYTES">
            <annotation>
              <documentation>
                The media from the publisher's CDN is malformed and cannot be conditioned. The trigger for this
                error is a media playlist URL within the publisher's HLS playlist that is malformed.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="CHAPTER_TIME_OUT_OF_BOUNDS">
            <annotation>
              <documentation>
                A chapter time for the content is outside of the range of the content's duration. The trigger
                for this error is the chapter time (a parsable long representing the time in ms) that is out of
                bounds.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="INTERNAL_ERROR">
            <annotation>
              <documentation>
                An internal error occurred while conditioning the content. There is no trigger for this error.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="CONTENT_HAS_CHAPTER_TIMES_BUT_NO_MIDROLL_SETTINGS">
            <annotation>
              <documentation>
                The content has chapter times but the content's source has no CDN settings for midrolls. There
                is no trigger for this error.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="MALFORMED_MEDIA_PLAYLIST">
            <annotation>
              <documentation>
                There is bad/missing/malformed data in a media playlist. The trigger for this error is the URL
                that points to the malformed media playlist.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="MIXED_AD_BREAK_TAGS">
            <annotation>
              <documentation>
                Multiple ways of denoting ad breaks were detected in a media playlist (e.g. placement
                opportunity tags, cue markers, etc.)
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="AD_BREAK_TAGS_INCONSISTENT_ACROSS_VARIANTS">
            <annotation>
              <documentation>
                The ad break tags in the preconditioned content are not in the same locations across all
                variant playlists.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="MALFORMED_SUBTITLES">
            <annotation>
              <documentation>
                There is bad/missing/malformed data in a subtitles file. The trigger for this error is the URL
                that points to the malformed subtitles.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="PLAYLIST_ITEM_URL_DOES_NOT_MATCH_INGEST_COMMON_PATH">
            <annotation>
              <documentation>
                A playlist item has a URL that does not begin with the ingest common path provided in the DAI
                settings. The trigger for this error is the playlist item URL.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="COULD_NOT_UPLOAD_SPLIT_MEDIA_AUTHENTICATION_FAILED">
            <annotation>
              <documentation>
                Uploading split media segments failed due to an authentication error.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="COULD_NOT_UPLOAD_SPLIT_MEDIA_CONNECTION_FAILED">
            <annotation>
              <documentation>
                Uploading spit media segments failed due to a connection error.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="COULD_NOT_UPLOAD_SPLIT_MEDIA_WRITE_FAILED">
            <annotation>
              <documentation>
                Uploading split media segments failed due to a write error.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="PLAYLISTS_HAVE_DIFFERENT_NUMBER_OF_DISCONTINUITIES">
            <annotation>
              <documentation>
                Variants in a playlist do not have the same number of discontinuities. The trigger for this
                error is the master playlist URI.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="PLAYIST_HAS_NO_STARTING_PTS_VALUE">
            <annotation>
              <documentation>
                The playlist does not have a starting PTS value. The trigger for this error is the master
                playlist URI.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="PLAYLIST_DISCONTINUITY_PTS_VALUES_DIFFER_TOO_MUCH">
            <annotation>
              <documentation>
                The PTS at a discontinuity varies too much between the different variants. The trigger for this
                error is the master playlist URI.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="SEGMENT_HAS_NO_PTS">
            <annotation>
              <documentation>
                A media segment has no PTS. The trigger for this error is the segment data URI.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="SUBTITLE_LANGUAGE_DOES_NOT_MATCH_LANGUAGE_IN_FEED">
            <annotation>
              <documentation>
                The language in the subtitles file does not match the language specified in the feed. The
                trigger for this error is the feed language and the parsed language separated by a semi-colon,
                e.g. "en;sp".
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="CANNOT_DETERMINE_CORRECT_SUBTITLES_FOR_LANGUAGE">
            <annotation>
              <documentation>
                There are multiple subtitles files at the closed caption URI, and none of them match the
                language defined in the feed. The trigger for this error is language in the feed.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="NO_CDN_CONFIGURATION_FOUND">
            <annotation>
              <documentation>
                No CDN configuration found for the content. The trigger for this error is the content's master
                playlist URI.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="CONTENT_HAS_MIDROLLS_BUT_NO_SPLIT_CONTENT_CONFIG">
            <annotation>
              <documentation>
                The content has midrolls but there was no split content config on the CDN configuration for
                that content so the content was not conditioned. There is no trigger for this error.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="CONTENT_HAS_MIDROLLS_BUT_SOURCE_HAS_MIDROLLS_DISABLED">
            <annotation>
              <documentation>
                The content has midrolls but the source the content was ingested from has mid-rolls disabled,
                so the content was not conditioned. There is no trigger for this error.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="ADTS_PARSE_ERROR">
            <annotation>
              <documentation>
                Error parsing ADTS while splitting the content. The trigger for this error is the variant URL
                and the cue-point separated by a semi-colon, e.g. "www.variant2.com;5000".
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="AAC_SPLIT_ERROR">
            <annotation>
              <documentation>
                Error splitting an AAC segment. The trigger for this error is the variant URL and the cue-point
                separated by a semi-colon, e.g. "www.variant2.com;5000".
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="AAC_PARSE_ERROR">
            <annotation>
              <documentation>
                Error parsing an AAC file while splitting the content. The trigger for this error is the
                variant URL and the cue-point separated by a semi-colon, e.g. "www.variant2.com;5000".
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="TS_PARSE_ERROR">
            <annotation>
              <documentation>
                Error parsing a TS file while splitting the content. The trigger for this error is the variant
                URL and the cue-point separated by a semi-colon, e.g. "www.variant2.com;5000".
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="TS_SPLIT_ERROR">
            <annotation>
              <documentation>
                Error splitting a TS file while splitting the content. The trigger for this error is the
                variant URL and the cue-point separated by a semi-colon, e.g. "www.variant2.com;5000".
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="UNSUPPORTED_CONTAINER_FORMAT">
            <annotation>
              <documentation>
                Encountered an unsupported container format while splitting the content. The trigger for this
                error is the variant URL and the cue-point separated by a semi-colon, e.g.
                "www.variant2.com;5000".
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="MULTIPLE_ELEMENTARY_STREAMS_OF_SAME_MEDIA_TYPE_IN_TS">
            <annotation>
              <documentation>
                Encountered multiple elementary streams of the same media type (audio, video) within a
                transport stream. The trigger for this error is the variant URL and the cue-point separated by
                a semi-colon, e.g. "www.variant2.com;5000".
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="UNSUPPORTED_TS_MEDIA_FORMAT">
            <annotation>
              <documentation>
                Encountered an unsupported TS media format while splitting the content. The trigger for this
                error is the variant URL and the cue-point separated by a semi-colon, e.g.
                "www.variant2.com;5000".
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="NO_IFRAMES_NEAR_CUE_POINT">
            <annotation>
              <documentation>
                Error splitting because there were no i-frames near the target split point. The trigger for
                this error is the variant URL and the cue-point separated by a semi-colon, e.g.
                "www.variant2.com;5000".
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="AC3_SPLIT_ERROR">
            <annotation>
              <documentation>
                Error splitting an AC-3 segment. The trigger for this error is the variant URL and the
                cue-point separated by a semi-colon, e.g. "www.variant2.com;5000".
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="AC3_PARSE_ERROR">
            <annotation>
              <documentation>
                Error parsing an AC-3 file while splitting the content. The trigger for this error is the
                variant URL and the cue-point separated by a semi-colon, e.g. "www.variant2.com;5000".
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="EAC3_SPLIT_ERROR">
            <annotation>
              <documentation>
                Error splitting an E-AC-3 segment. The trigger for this error is the variant URL and the
                cue-point separated by a semi-colon, e.g. "www.variant2.com;5000".
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="INVALID_ENCRYPTION_KEY">
            <annotation>
              <documentation>
                Error caused by an invalid encryption key. The trigger for this error is a media playlist URL
                within the publisher's HLS playlist that has the invalid encryption key.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="EAC3_PARSE_ERROR">
            <annotation>
              <documentation>
                Error parsing an E-AC-3 file while splitting the content. The trigger for this error is the
                variant URL and the cue-point separated by a semi-colon, e.g. "www.variant2.com;5000".
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="CUE_POINT_COUNT_DOES_NOT_MATCH_PTS_COUNT">
            <annotation>
              <documentation>
                Error caused by the number of PTS being a different value than the number of cue points + 1.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="CLOSED_CAPTION_LANGUAGE_VALUE_INVALID">
            <annotation>
              <documentation>
                The subtitle language code should not contain "$$$$$".
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="CLOSED_CAPTION_NAME_VALUE_INVALID">
            <annotation>
              <documentation>
                The subtitle name should not contain "$$$$$".
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="CLOSED_CAPTION_CHARACTERISTICS_VALUE_UNEXPECTED">
            <annotation>
              <documentation>
                The common subtitle characteristics values listed in the HLS spec are:
                1)"public.accessibility.transcribes-spoken-dialog",
                2)"public.accessibility.describes-music-and-sound", 3)"public.easy-to-read";
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="CLOSED_CAPTIONS_WITH_DUPLICATE_KEYS">
            <annotation>
              <documentation>
                Closed captions for a content should be unique by 'language + name'.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="UNKNOWN">
            <annotation>
              <documentation>
                The value returned if the actual value is not exposed by the requested API version.
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="DaiIngestStatus">
        <annotation>
          <documentation>
            The status of the DAI ingestion process. Only content with a status of {@link #SUCCESS} will be
            available for dynamic ad insertion.
          </documentation>
        </annotation>
        <restriction base="xsd:string">
          <enumeration value="SUCCESS">
            <annotation>
              <documentation>
                The content was successfully ingested for DAI.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="WARNING">
            <annotation>
              <documentation>
                There was a non-fatal issue during the DAI ingestion proccess.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="FAILURE">
            <annotation>
              <documentation>
                There was a non-fatal issue during the DAI ingestion proccess and the content is not available
                for dynamic ad insertion.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="UNKNOWN">
            <annotation>
              <documentation>
                The value returned if the actual value is not exposed by the requested API version.
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <element name="getContentByStatement">
        <annotation>
          <documentation>
            Gets a {@link ContentPage} of {@link Content} objects that satisfy the given {@link
            Statement#query}. The following fields are supported for filtering:
            
            &lt;table&gt;
            &lt;tr&gt;
            &lt;th scope="col"&gt;PQL Property&lt;/th&gt; &lt;th scope="col"&gt;Object Property&lt;/th&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
            &lt;td&gt;{@code id}&lt;/td&gt;
            &lt;td&gt;{@link Content#id}&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
            &lt;td&gt;{@code status}&lt;/td&gt;
            &lt;td&gt;{@link Content#status}&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
            &lt;td&gt;{@code name}&lt;/td&gt;
            &lt;td&gt;{@link Content#name}&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
            &lt;td&gt;{@code lastModifiedDateTime}&lt;/td&gt;
            &lt;td&gt;{@link Content#lastModifiedDateTime}&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
            &lt;td&gt;{@code lastDaiIngestDateTime}&lt;/td&gt;
            &lt;td&gt;{@link Content#lastDaiIngestDateTime}&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
            &lt;td&gt;{@code daiIngestStatus}&lt;/td&gt;
            &lt;td&gt;{@link Content#daiIngestStatus}&lt;/td&gt;
            &lt;/tr&gt;
            &lt;/table&gt;
            
            @param statement a Publisher Query Language statement used to filter a set of content
            @return the content that matches the given filter
          </documentation>
        </annotation>
        <complexType>
          <sequence>
            <element maxOccurs="1" minOccurs="0" name="statement" type="tns:Statement"/>
          </sequence>
        </complexType>
      </element>
      <element name="getContentByStatementResponse">
        <complexType>
          <sequence>
            <element maxOccurs="1" minOccurs="0" name="rval" type="tns:ContentPage"/>
          </sequence>
        </complexType>
      </element>
      <element name="ApiExceptionFault" type="tns:ApiException">
        <annotation>
          <documentation>
            A fault element of type ApiException.
          </documentation>
        </annotation>
      </element>
      <element name="RequestHeader" type="tns:SoapRequestHeader"/>
      <element name="ResponseHeader" type="tns:SoapResponseHeader"/>
    </schema>
  </wsdl:types>
  <wsdl:message name="RequestHeader">
    <wsdl:part element="tns:RequestHeader" name="RequestHeader"/>
  </wsdl:message>
  <wsdl:message name="ResponseHeader">
    <wsdl:part element="tns:ResponseHeader" name="ResponseHeader"/>
  </wsdl:message>
  <wsdl:message name="getContentByStatementRequest">
    <wsdl:part element="tns:getContentByStatement" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getContentByStatementResponse">
    <wsdl:part element="tns:getContentByStatementResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="ApiException">
    <wsdl:part element="tns:ApiExceptionFault" name="ApiException"/>
  </wsdl:message>
  <wsdl:portType name="ContentServiceInterface">
    <wsdl:documentation>
      Service for retrieving {@link Content}.
      
      &lt;p&gt;{@code Content} entities can be targeted in video {@link LineItem}s.
      
      &lt;p&gt;You can query for content that belongs to a particular category or has assigned metadata.
      Categories and metadata for {@code Content} are stored in DFP as {@link CustomCriteria}.
      
      &lt;p&gt;For example, to find all {@code Content} that is "genre=comedy", you would:
      
      &lt;ul&gt;
      &lt;li&gt;Retrieve the custom targeting key corresponding to "genre" using {@link
      CustomTargetingService#getCustomTargetingKeysByStatement}
      &lt;li&gt;Using the {@link CustomTargetingService#getCustomTargetingValuesByStatement} method and a
      filter like "WHERE customTargetingKeyId = :genreKeyId and name = 'comedy'", retrieve the ID
      for the "comedy" custom targeting value.
      &lt;li&gt;Call {@link #getContentByStatementAndCustomTargetingValue} with a filter like "WHERE status =
      'ACTIVE'" and the ID of the custom targeting value from step 2.
      &lt;/ul&gt;
    </wsdl:documentation>
    <wsdl:operation name="getContentByStatement">
      <wsdl:documentation>
        Gets a {@link ContentPage} of {@link Content} objects that satisfy the given {@link
        Statement#query}. The following fields are supported for filtering:
        
        &lt;table&gt;
        &lt;tr&gt;
        &lt;th scope="col"&gt;PQL Property&lt;/th&gt; &lt;th scope="col"&gt;Object Property&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;{@code id}&lt;/td&gt;
        &lt;td&gt;{@link Content#id}&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;{@code status}&lt;/td&gt;
        &lt;td&gt;{@link Content#status}&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;{@code name}&lt;/td&gt;
        &lt;td&gt;{@link Content#name}&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;{@code lastModifiedDateTime}&lt;/td&gt;
        &lt;td&gt;{@link Content#lastModifiedDateTime}&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;{@code lastDaiIngestDateTime}&lt;/td&gt;
        &lt;td&gt;{@link Content#lastDaiIngestDateTime}&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;{@code daiIngestStatus}&lt;/td&gt;
        &lt;td&gt;{@link Content#daiIngestStatus}&lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        
        @param statement a Publisher Query Language statement used to filter a set of content
        @return the content that matches the given filter
      </wsdl:documentation>
      <wsdl:input message="tns:getContentByStatementRequest" name="getContentByStatementRequest"/>
      <wsdl:output message="tns:getContentByStatementResponse" name="getContentByStatementResponse"/>
      <wsdl:fault message="tns:ApiException" name="ApiException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ContentServiceSoapBinding" type="tns:ContentServiceInterface">
    <wsdlsoap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="getContentByStatement">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getContentByStatementRequest">
        <wsdlsoap:header message="tns:RequestHeader"
          part="RequestHeader" use="literal"/>
        <wsdlsoap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getContentByStatementResponse">
        <wsdlsoap:header message="tns:ResponseHeader"
          part="ResponseHeader" use="literal"/>
        <wsdlsoap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ApiException">
        <wsdlsoap:fault name="ApiException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ContentService">
    <wsdl:port binding="tns:ContentServiceSoapBinding" name="ContentServiceInterfacePort">
      <wsdlsoap:address location="https://ads.google.com/apis/ads/publisher/v202111/ContentService"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>
