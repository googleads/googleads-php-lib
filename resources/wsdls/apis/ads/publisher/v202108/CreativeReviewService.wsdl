<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated file, do not edit -->
<!-- Copyright 2021 Google Inc. All Rights Reserved -->
<wsdl:definitions
  targetNamespace="https://www.google.com/apis/ads/publisher/v202108"
  xmlns:tns="https://www.google.com/apis/ads/publisher/v202108"
  xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
  xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <wsdl:types>
    <schema elementFormDefault="qualified" jaxb:version="1.0"
      targetNamespace="https://www.google.com/apis/ads/publisher/v202108"
      xmlns="http://www.w3.org/2001/XMLSchema"
      xmlns:jaxb="http://java.sun.com/xml/ns/jaxb" xmlns:tns="https://www.google.com/apis/ads/publisher/v202108">
      <annotation>
        <appinfo>
          <jaxb:globalBindings typesafeEnumMaxMembers="999999"/>
        </appinfo>
      </annotation>
      <complexType abstract="true" name="ObjectValue">
        <complexContent>
          <extension base="tns:Value">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType abstract="true" name="ApiError">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="fieldPath" type="xsd:string"/>
          <element maxOccurs="unbounded" minOccurs="0"
            name="fieldPathElements" type="tns:FieldPathElement"/>
          <element maxOccurs="1" minOccurs="0" name="trigger" type="xsd:string"/>
          <element maxOccurs="1" minOccurs="0" name="errorString" type="xsd:string"/>
        </sequence>
      </complexType>
      <complexType name="ApiException">
        <complexContent>
          <extension base="tns:ApplicationException">
            <sequence>
              <element maxOccurs="unbounded" minOccurs="0" name="errors" type="tns:ApiError"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="ApiVersionError">
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:ApiVersionError.Reason"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="ApplicationException">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="message" type="xsd:string"/>
        </sequence>
      </complexType>
      <complexType name="ApproveCreativeReviews">
        <complexContent>
          <extension base="tns:CreativeReviewAction">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="ArchiveCreativeReviews">
        <complexContent>
          <extension base="tns:CreativeReviewAction">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="AuthenticationError">
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:AuthenticationError.Reason"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="BooleanValue">
        <complexContent>
          <extension base="tns:Value">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="value" type="xsd:boolean"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="CollectionSizeError">
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:CollectionSizeError.Reason"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="CommonError">
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:CommonError.Reason"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType abstract="true" name="CreativeReviewAction">
        <sequence/>
      </complexType>
      <complexType name="CreativeReview">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="id" type="xsd:string">
            <annotation>
              <documentation>
                This attribute is read-only.
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="1" minOccurs="0" name="reviewableUrl" type="xsd:string">
            <annotation>
              <documentation>
                This attribute is read-only.
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="1" minOccurs="0" name="impressions" type="xsd:long">
            <annotation>
              <documentation>
                This attribute is read-only.
              </documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="CreativeReviewPage">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="totalResultSetSize" type="xsd:int"/>
          <element maxOccurs="1" minOccurs="0" name="startIndex" type="xsd:int"/>
          <element maxOccurs="unbounded" minOccurs="0" name="results" type="tns:CreativeReview"/>
        </sequence>
      </complexType>
      <complexType name="Date">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="year" type="xsd:int"/>
          <element maxOccurs="1" minOccurs="0" name="month" type="xsd:int"/>
          <element maxOccurs="1" minOccurs="0" name="day" type="xsd:int"/>
        </sequence>
      </complexType>
      <complexType name="DateTime">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="date" type="tns:Date"/>
          <element maxOccurs="1" minOccurs="0" name="hour" type="xsd:int"/>
          <element maxOccurs="1" minOccurs="0" name="minute" type="xsd:int"/>
          <element maxOccurs="1" minOccurs="0" name="second" type="xsd:int"/>
          <element maxOccurs="1" minOccurs="0" name="timeZoneId" type="xsd:string"/>
        </sequence>
      </complexType>
      <complexType name="DateTimeValue">
        <complexContent>
          <extension base="tns:Value">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="value" type="tns:DateTime"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="DateValue">
        <complexContent>
          <extension base="tns:Value">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="value" type="tns:Date"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="DisapproveCreativeReviews">
        <complexContent>
          <extension base="tns:CreativeReviewAction">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="FeatureError">
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:FeatureError.Reason"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="FieldPathElement">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="field" type="xsd:string"/>
          <element maxOccurs="1" minOccurs="0" name="index" type="xsd:int"/>
        </sequence>
      </complexType>
      <complexType name="InternalApiError">
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:InternalApiError.Reason"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="NotNullError">
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:NotNullError.Reason"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="NumberValue">
        <complexContent>
          <extension base="tns:Value">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="value" type="xsd:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="ParseError">
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:ParseError.Reason"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="PermissionError">
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:PermissionError.Reason"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="PublisherQueryLanguageContextError">
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:PublisherQueryLanguageContextError.Reason"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="PublisherQueryLanguageSyntaxError">
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:PublisherQueryLanguageSyntaxError.Reason"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="QuotaError">
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:QuotaError.Reason"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="RequiredCollectionError">
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:RequiredCollectionError.Reason"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="RequiredError">
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:RequiredError.Reason"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="ServerError">
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:ServerError.Reason"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="SetValue">
        <complexContent>
          <extension base="tns:Value">
            <sequence>
              <element maxOccurs="unbounded" minOccurs="0" name="values" type="tns:Value"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="SoapRequestHeader">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="networkCode" type="xsd:string"/>
          <element maxOccurs="1" minOccurs="0" name="applicationName" type="xsd:string"/>
        </sequence>
      </complexType>
      <complexType name="SoapResponseHeader">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="requestId" type="xsd:string"/>
          <element maxOccurs="1" minOccurs="0" name="responseTime" type="xsd:long"/>
        </sequence>
      </complexType>
      <complexType name="Statement">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="query" type="xsd:string"/>
          <element maxOccurs="unbounded" minOccurs="0" name="values" type="tns:String_ValueMapEntry"/>
        </sequence>
      </complexType>
      <complexType name="StatementError">
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:StatementError.Reason"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="StringFormatError">
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:StringFormatError.Reason"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="StringLengthError">
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:StringLengthError.Reason"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="String_ValueMapEntry">
        <annotation>
          <documentation>
            This represents an entry in a map with a key of type String
            and value of type Value.
          </documentation>
        </annotation>
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="key" type="xsd:string"/>
          <element maxOccurs="1" minOccurs="0" name="value" type="tns:Value"/>
        </sequence>
      </complexType>
      <complexType name="TextValue">
        <complexContent>
          <extension base="tns:Value">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="value" type="xsd:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="UpdateResult">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="numChanges" type="xsd:int"/>
        </sequence>
      </complexType>
      <complexType abstract="true" name="Value">
        <sequence/>
      </complexType>
      <simpleType name="ApiVersionError.Reason">
        <restriction base="xsd:string">
          <enumeration value="UPDATE_TO_NEWER_VERSION"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="AuthenticationError.Reason">
        <restriction base="xsd:string">
          <enumeration value="AMBIGUOUS_SOAP_REQUEST_HEADER"/>
          <enumeration value="INVALID_EMAIL"/>
          <enumeration value="AUTHENTICATION_FAILED"/>
          <enumeration value="INVALID_OAUTH_SIGNATURE"/>
          <enumeration value="INVALID_SERVICE"/>
          <enumeration value="MISSING_SOAP_REQUEST_HEADER"/>
          <enumeration value="MISSING_AUTHENTICATION_HTTP_HEADER"/>
          <enumeration value="MISSING_AUTHENTICATION"/>
          <enumeration value="NETWORK_API_ACCESS_DISABLED"/>
          <enumeration value="NO_NETWORKS_TO_ACCESS"/>
          <enumeration value="NETWORK_NOT_FOUND"/>
          <enumeration value="NETWORK_CODE_REQUIRED"/>
          <enumeration value="CONNECTION_ERROR"/>
          <enumeration value="GOOGLE_ACCOUNT_ALREADY_ASSOCIATED_WITH_NETWORK"/>
          <enumeration value="UNDER_INVESTIGATION"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="CollectionSizeError.Reason">
        <restriction base="xsd:string">
          <enumeration value="TOO_LARGE"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="CommonError.Reason">
        <restriction base="xsd:string">
          <enumeration value="NOT_FOUND"/>
          <enumeration value="ALREADY_EXISTS"/>
          <enumeration value="NOT_APPLICABLE"/>
          <enumeration value="DUPLICATE_OBJECT"/>
          <enumeration value="CANNOT_UPDATE"/>
          <enumeration value="UNSUPPORTED_OPERATION"/>
          <enumeration value="CONCURRENT_MODIFICATION"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="FeatureError.Reason">
        <restriction base="xsd:string">
          <enumeration value="MISSING_FEATURE"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="InternalApiError.Reason">
        <restriction base="xsd:string">
          <enumeration value="UNEXPECTED_INTERNAL_API_ERROR"/>
          <enumeration value="TRANSIENT_ERROR"/>
          <enumeration value="UNKNOWN"/>
          <enumeration value="DOWNTIME"/>
          <enumeration value="ERROR_GENERATING_RESPONSE"/>
        </restriction>
      </simpleType>
      <simpleType name="NotNullError.Reason">
        <restriction base="xsd:string">
          <enumeration value="ARG1_NULL"/>
          <enumeration value="ARG2_NULL"/>
          <enumeration value="ARG3_NULL"/>
          <enumeration value="NULL"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="ParseError.Reason">
        <restriction base="xsd:string">
          <enumeration value="UNPARSABLE"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="PermissionError.Reason">
        <restriction base="xsd:string">
          <enumeration value="PERMISSION_DENIED"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="PublisherQueryLanguageContextError.Reason">
        <restriction base="xsd:string">
          <enumeration value="UNEXECUTABLE"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="PublisherQueryLanguageSyntaxError.Reason">
        <restriction base="xsd:string">
          <enumeration value="UNPARSABLE"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="QuotaError.Reason">
        <restriction base="xsd:string">
          <enumeration value="EXCEEDED_QUOTA"/>
          <enumeration value="UNKNOWN"/>
          <enumeration value="REPORT_JOB_LIMIT"/>
        </restriction>
      </simpleType>
      <simpleType name="RequiredCollectionError.Reason">
        <restriction base="xsd:string">
          <enumeration value="REQUIRED"/>
          <enumeration value="TOO_LARGE"/>
          <enumeration value="TOO_SMALL"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="RequiredError.Reason">
        <restriction base="xsd:string">
          <enumeration value="REQUIRED"/>
        </restriction>
      </simpleType>
      <simpleType name="ServerError.Reason">
        <restriction base="xsd:string">
          <enumeration value="SERVER_ERROR"/>
          <enumeration value="SERVER_BUSY"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="StatementError.Reason">
        <restriction base="xsd:string">
          <enumeration value="VARIABLE_NOT_BOUND_TO_VALUE"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="StringFormatError.Reason">
        <restriction base="xsd:string">
          <enumeration value="UNKNOWN"/>
          <enumeration value="ILLEGAL_CHARS"/>
          <enumeration value="INVALID_FORMAT"/>
        </restriction>
      </simpleType>
      <simpleType name="StringLengthError.Reason">
        <restriction base="xsd:string">
          <enumeration value="TOO_LONG"/>
          <enumeration value="TOO_SHORT"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <element name="getCreativeReviewsByStatement">
        <annotation>
          <documentation>
            Gets a {@link CreativeReviewPage} of {@link CreativeReview} objects that satisfy the given
            {@link Statement#query}. This will allow you to review creatives that have displayed (or could
            have displayed) on your pages or apps in the last 30 days. To ensure that you are always
            reviewing the most important creatives first, the {@link CreativeReview} objects are ranked
            according to the number of impressions that they've received.
            
            @param statement a Publisher Query Language statement used to specify the page of {@link
            CreativeReview} to be fetch. Only {@code LIMIT} is supported.
            @return the {@link CreativeReview}s that match the given filter
          </documentation>
        </annotation>
        <complexType>
          <sequence>
            <element maxOccurs="1" minOccurs="0" name="statement" type="tns:Statement"/>
          </sequence>
        </complexType>
      </element>
      <element name="getCreativeReviewsByStatementResponse">
        <complexType>
          <sequence>
            <element maxOccurs="1" minOccurs="0" name="rval" type="tns:CreativeReviewPage"/>
          </sequence>
        </complexType>
      </element>
      <element name="ApiExceptionFault" type="tns:ApiException">
        <annotation>
          <documentation>
            A fault element of type ApiException.
          </documentation>
        </annotation>
      </element>
      <element name="performCreativeReviewAction">
        <annotation>
          <documentation>
            Performs actions on {@link CreativeReview} objects that match the given {@link
            Statement#query}. You can use actions to approve (allow) or disapprove (block) creatives, as
            seen in the corresponding {@link CreativeReview} objects. You can also archive creatives to
            allow you to retrieve new {@link CreativeReview} objects while previously retrieved {@link
            CreativeReview} objects are in pending approval.
            
            @param creativeReviewAction the action to perform
            @param filterStatement a Publisher Query Language statement used to filter a set of creative
            reviews. Only {@code "WHERE id = &lt;value&gt;"} and {@code "WHERE id IN &lt;list&gt;"} are supported.
            @return the result of the action performed
          </documentation>
        </annotation>
        <complexType>
          <sequence>
            <element maxOccurs="1" minOccurs="0"
              name="creativeReviewAction" type="tns:CreativeReviewAction"/>
            <element maxOccurs="1" minOccurs="0" name="filterStatement" type="tns:Statement"/>
          </sequence>
        </complexType>
      </element>
      <element name="performCreativeReviewActionResponse">
        <complexType>
          <sequence>
            <element maxOccurs="1" minOccurs="0" name="rval" type="tns:UpdateResult"/>
          </sequence>
        </complexType>
      </element>
      <element name="RequestHeader" type="tns:SoapRequestHeader"/>
      <element name="ResponseHeader" type="tns:SoapResponseHeader"/>
    </schema>
  </wsdl:types>
  <wsdl:message name="RequestHeader">
    <wsdl:part element="tns:RequestHeader" name="RequestHeader"/>
  </wsdl:message>
  <wsdl:message name="ResponseHeader">
    <wsdl:part element="tns:ResponseHeader" name="ResponseHeader"/>
  </wsdl:message>
  <wsdl:message name="getCreativeReviewsByStatementRequest">
    <wsdl:part element="tns:getCreativeReviewsByStatement" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getCreativeReviewsByStatementResponse">
    <wsdl:part element="tns:getCreativeReviewsByStatementResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="ApiException">
    <wsdl:part element="tns:ApiExceptionFault" name="ApiException"/>
  </wsdl:message>
  <wsdl:message name="performCreativeReviewActionRequest">
    <wsdl:part element="tns:performCreativeReviewAction" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="performCreativeReviewActionResponse">
    <wsdl:part element="tns:performCreativeReviewActionResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:portType name="CreativeReviewServiceInterface">
    <wsdl:operation name="getCreativeReviewsByStatement">
      <wsdl:documentation>
        Gets a {@link CreativeReviewPage} of {@link CreativeReview} objects that satisfy the given
        {@link Statement#query}. This will allow you to review creatives that have displayed (or could
        have displayed) on your pages or apps in the last 30 days. To ensure that you are always
        reviewing the most important creatives first, the {@link CreativeReview} objects are ranked
        according to the number of impressions that they've received.
        
        @param statement a Publisher Query Language statement used to specify the page of {@link
        CreativeReview} to be fetch. Only {@code LIMIT} is supported.
        @return the {@link CreativeReview}s that match the given filter
      </wsdl:documentation>
      <wsdl:input message="tns:getCreativeReviewsByStatementRequest" name="getCreativeReviewsByStatementRequest"/>
      <wsdl:output message="tns:getCreativeReviewsByStatementResponse" name="getCreativeReviewsByStatementResponse"/>
      <wsdl:fault message="tns:ApiException" name="ApiException"/>
    </wsdl:operation>
    <wsdl:operation name="performCreativeReviewAction">
      <wsdl:documentation>
        Performs actions on {@link CreativeReview} objects that match the given {@link
        Statement#query}. You can use actions to approve (allow) or disapprove (block) creatives, as
        seen in the corresponding {@link CreativeReview} objects. You can also archive creatives to
        allow you to retrieve new {@link CreativeReview} objects while previously retrieved {@link
        CreativeReview} objects are in pending approval.
        
        @param creativeReviewAction the action to perform
        @param filterStatement a Publisher Query Language statement used to filter a set of creative
        reviews. Only {@code "WHERE id = &lt;value&gt;"} and {@code "WHERE id IN &lt;list&gt;"} are supported.
        @return the result of the action performed
      </wsdl:documentation>
      <wsdl:input message="tns:performCreativeReviewActionRequest" name="performCreativeReviewActionRequest"/>
      <wsdl:output message="tns:performCreativeReviewActionResponse" name="performCreativeReviewActionResponse"/>
      <wsdl:fault message="tns:ApiException" name="ApiException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="CreativeReviewServiceSoapBinding" type="tns:CreativeReviewServiceInterface">
    <wsdlsoap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="getCreativeReviewsByStatement">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getCreativeReviewsByStatementRequest">
        <wsdlsoap:header message="tns:RequestHeader"
          part="RequestHeader" use="literal"/>
        <wsdlsoap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getCreativeReviewsByStatementResponse">
        <wsdlsoap:header message="tns:ResponseHeader"
          part="ResponseHeader" use="literal"/>
        <wsdlsoap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ApiException">
        <wsdlsoap:fault name="ApiException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="performCreativeReviewAction">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="performCreativeReviewActionRequest">
        <wsdlsoap:header message="tns:RequestHeader"
          part="RequestHeader" use="literal"/>
        <wsdlsoap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="performCreativeReviewActionResponse">
        <wsdlsoap:header message="tns:ResponseHeader"
          part="ResponseHeader" use="literal"/>
        <wsdlsoap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ApiException">
        <wsdlsoap:fault name="ApiException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="CreativeReviewService">
    <wsdl:port binding="tns:CreativeReviewServiceSoapBinding" name="CreativeReviewServiceInterfacePort">
      <wsdlsoap:address location="https://ads.google.com/apis/ads/publisher/v202108/CreativeReviewService"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>
