<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated file, do not edit -->
<!-- Copyright 2024 Google Inc. All Rights Reserved -->
<wsdl:definitions
  targetNamespace="https://www.google.com/apis/ads/publisher/v202311"
  xmlns:tns="https://www.google.com/apis/ads/publisher/v202311"
  xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
  xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <wsdl:types>
    <schema elementFormDefault="qualified" jaxb:version="1.0"
      targetNamespace="https://www.google.com/apis/ads/publisher/v202311"
      xmlns="http://www.w3.org/2001/XMLSchema"
      xmlns:jaxb="http://java.sun.com/xml/ns/jaxb" xmlns:tns="https://www.google.com/apis/ads/publisher/v202311">
      <annotation>
        <appinfo>
          <jaxb:globalBindings typesafeEnumMaxMembers="999999"/>
        </appinfo>
      </annotation>
      <complexType abstract="true" name="ApiError">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="fieldPath" type="xsd:string"/>
          <element maxOccurs="unbounded" minOccurs="0"
            name="fieldPathElements" type="tns:FieldPathElement"/>
          <element maxOccurs="1" minOccurs="0" name="trigger" type="xsd:string"/>
          <element maxOccurs="1" minOccurs="0" name="errorString" type="xsd:string"/>
        </sequence>
      </complexType>
      <complexType name="ApiException">
        <complexContent>
          <extension base="tns:ApplicationException">
            <sequence>
              <element maxOccurs="unbounded" minOccurs="0" name="errors" type="tns:ApiError"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="ApiVersionError">
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:ApiVersionError.Reason"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="ApplicationException">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="message" type="xsd:string"/>
        </sequence>
      </complexType>
      <complexType name="AuthenticationError">
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:AuthenticationError.Reason"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="CollectionSizeError">
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:CollectionSizeError.Reason"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="CommonError">
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:CommonError.Reason"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="FeatureError">
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:FeatureError.Reason"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="FieldPathElement">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="field" type="xsd:string"/>
          <element maxOccurs="1" minOccurs="0" name="index" type="xsd:int"/>
        </sequence>
      </complexType>
      <complexType name="IdError">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="index" type="xsd:long"/>
          <element maxOccurs="1" minOccurs="0" name="errorType" type="tns:IdError.IdErrorType"/>
        </sequence>
      </complexType>
      <complexType name="InternalApiError">
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:InternalApiError.Reason"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="NotNullError">
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:NotNullError.Reason"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="ParseError">
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:ParseError.Reason"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="PermissionError">
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:PermissionError.Reason"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="ProcessAction">
        <complexContent>
          <extension base="tns:SegmentPopulationAction">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="PublisherQueryLanguageContextError">
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:PublisherQueryLanguageContextError.Reason"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="PublisherQueryLanguageSyntaxError">
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:PublisherQueryLanguageSyntaxError.Reason"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="QuotaError">
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:QuotaError.Reason"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="RequiredCollectionError">
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:RequiredCollectionError.Reason"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="RequiredError">
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:RequiredError.Reason"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType abstract="true" name="SegmentPopulationAction">
        <sequence/>
      </complexType>
      <complexType name="SegmentPopulationError">
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:SegmentPopulationError.Reason"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="SegmentPopulationRequest">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="batchUploadId" type="xsd:long"/>
          <element maxOccurs="1" minOccurs="0" name="segmentId" type="xsd:long"/>
          <element maxOccurs="1" minOccurs="0" name="isDeletion" type="xsd:boolean"/>
          <element maxOccurs="1" minOccurs="0" name="identifierType" type="tns:IdentifierType"/>
          <element maxOccurs="unbounded" minOccurs="0" name="ids" type="xsd:string"/>
          <element maxOccurs="1" minOccurs="0" name="consentType" type="tns:ConsentType"/>
        </sequence>
      </complexType>
      <complexType name="SegmentPopulationResponse">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="batchUploadId" type="xsd:long"/>
          <element maxOccurs="unbounded" minOccurs="0" name="idErrors" type="tns:IdError"/>
        </sequence>
      </complexType>
      <complexType name="SegmentPopulationResults">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="batchUploadId" type="xsd:long"/>
          <element maxOccurs="1" minOccurs="0" name="segmentId" type="xsd:long"/>
          <element maxOccurs="1" minOccurs="0" name="status" type="tns:SegmentPopulationStatus"/>
          <element maxOccurs="1" minOccurs="0"
            name="numSuccessfulIdsProcessed" type="xsd:long"/>
          <element maxOccurs="unbounded" minOccurs="0" name="errors" type="tns:IdError"/>
        </sequence>
      </complexType>
      <complexType name="ServerError">
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:ServerError.Reason"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="SoapRequestHeader">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="networkCode" type="xsd:string"/>
          <element maxOccurs="1" minOccurs="0" name="applicationName" type="xsd:string"/>
        </sequence>
      </complexType>
      <complexType name="SoapResponseHeader">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="requestId" type="xsd:string"/>
          <element maxOccurs="1" minOccurs="0" name="responseTime" type="xsd:long"/>
        </sequence>
      </complexType>
      <complexType name="StringFormatError">
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:StringFormatError.Reason"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="StringLengthError">
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:StringLengthError.Reason"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="UpdateResult">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="numChanges" type="xsd:int"/>
        </sequence>
      </complexType>
      <simpleType name="ApiVersionError.Reason">
        <restriction base="xsd:string">
          <enumeration value="UPDATE_TO_NEWER_VERSION"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="AuthenticationError.Reason">
        <restriction base="xsd:string">
          <enumeration value="AMBIGUOUS_SOAP_REQUEST_HEADER"/>
          <enumeration value="INVALID_EMAIL"/>
          <enumeration value="AUTHENTICATION_FAILED"/>
          <enumeration value="INVALID_OAUTH_SIGNATURE"/>
          <enumeration value="INVALID_SERVICE"/>
          <enumeration value="MISSING_SOAP_REQUEST_HEADER"/>
          <enumeration value="MISSING_AUTHENTICATION_HTTP_HEADER"/>
          <enumeration value="MISSING_AUTHENTICATION"/>
          <enumeration value="NETWORK_API_ACCESS_DISABLED"/>
          <enumeration value="NO_NETWORKS_TO_ACCESS"/>
          <enumeration value="NETWORK_NOT_FOUND"/>
          <enumeration value="NETWORK_CODE_REQUIRED"/>
          <enumeration value="CONNECTION_ERROR"/>
          <enumeration value="GOOGLE_ACCOUNT_ALREADY_ASSOCIATED_WITH_NETWORK"/>
          <enumeration value="UNDER_INVESTIGATION"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="CollectionSizeError.Reason">
        <restriction base="xsd:string">
          <enumeration value="TOO_LARGE"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="CommonError.Reason">
        <restriction base="xsd:string">
          <enumeration value="NOT_FOUND"/>
          <enumeration value="ALREADY_EXISTS"/>
          <enumeration value="NOT_APPLICABLE"/>
          <enumeration value="DUPLICATE_OBJECT"/>
          <enumeration value="CANNOT_UPDATE"/>
          <enumeration value="UNSUPPORTED_OPERATION"/>
          <enumeration value="CONCURRENT_MODIFICATION"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="ConsentType">
        <restriction base="xsd:string">
          <enumeration value="UNSET"/>
          <enumeration value="GRANTED"/>
          <enumeration value="DENIED"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="FeatureError.Reason">
        <restriction base="xsd:string">
          <enumeration value="MISSING_FEATURE"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="IdError.IdErrorType">
        <restriction base="xsd:string">
          <enumeration value="INVALID_PUBLISHER_PROVIDED_ID_FORMAT"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="IdentifierType">
        <restriction base="xsd:string">
          <enumeration value="PUBLISHER_PROVIDED_IDENTIFIER"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="InternalApiError.Reason">
        <restriction base="xsd:string">
          <enumeration value="UNEXPECTED_INTERNAL_API_ERROR"/>
          <enumeration value="TRANSIENT_ERROR"/>
          <enumeration value="UNKNOWN"/>
          <enumeration value="DOWNTIME"/>
          <enumeration value="ERROR_GENERATING_RESPONSE"/>
        </restriction>
      </simpleType>
      <simpleType name="NotNullError.Reason">
        <restriction base="xsd:string">
          <enumeration value="ARG1_NULL"/>
          <enumeration value="ARG2_NULL"/>
          <enumeration value="ARG3_NULL"/>
          <enumeration value="NULL"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="ParseError.Reason">
        <restriction base="xsd:string">
          <enumeration value="UNPARSABLE"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="PermissionError.Reason">
        <restriction base="xsd:string">
          <enumeration value="PERMISSION_DENIED"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="PublisherQueryLanguageContextError.Reason">
        <restriction base="xsd:string">
          <enumeration value="UNEXECUTABLE"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="PublisherQueryLanguageSyntaxError.Reason">
        <restriction base="xsd:string">
          <enumeration value="UNPARSABLE"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="QuotaError.Reason">
        <restriction base="xsd:string">
          <enumeration value="EXCEEDED_QUOTA"/>
          <enumeration value="UNKNOWN"/>
          <enumeration value="REPORT_JOB_LIMIT"/>
          <enumeration value="SEGMENT_POPULATION_LIMIT"/>
        </restriction>
      </simpleType>
      <simpleType name="RequiredCollectionError.Reason">
        <restriction base="xsd:string">
          <enumeration value="REQUIRED"/>
          <enumeration value="TOO_LARGE"/>
          <enumeration value="TOO_SMALL"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="RequiredError.Reason">
        <restriction base="xsd:string">
          <enumeration value="REQUIRED"/>
        </restriction>
      </simpleType>
      <simpleType name="SegmentPopulationError.Reason">
        <restriction base="xsd:string">
          <enumeration value="TOO_MANY_IDENTIFIERS"/>
          <enumeration value="INVALID_SEGMENT"/>
          <enumeration value="JOB_ALREADY_STARTED"/>
          <enumeration value="NO_IDENTIFIERS"/>
          <enumeration value="NO_CONSENT"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="SegmentPopulationStatus">
        <restriction base="xsd:string">
          <enumeration value="FAILED"/>
          <enumeration value="SUCCESS"/>
          <enumeration value="PROCESSING"/>
          <enumeration value="PREPARING"/>
          <enumeration value="EXPIRED"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="ServerError.Reason">
        <restriction base="xsd:string">
          <enumeration value="SERVER_ERROR"/>
          <enumeration value="SERVER_BUSY"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="StringFormatError.Reason">
        <restriction base="xsd:string">
          <enumeration value="UNKNOWN"/>
          <enumeration value="ILLEGAL_CHARS"/>
          <enumeration value="INVALID_FORMAT"/>
        </restriction>
      </simpleType>
      <simpleType name="StringLengthError.Reason">
        <restriction base="xsd:string">
          <enumeration value="TOO_LONG"/>
          <enumeration value="TOO_SHORT"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <element name="getSegmentPopulationResultsByIds">
        <annotation>
          <documentation>
            Returns a list of {@link SegmentPopulationResults} for the given {@code batchUploadIds}.
          </documentation>
        </annotation>
        <complexType>
          <sequence>
            <element maxOccurs="unbounded" minOccurs="0"
              name="batchUploadIds" type="xsd:long"/>
          </sequence>
        </complexType>
      </element>
      <element name="getSegmentPopulationResultsByIdsResponse">
        <complexType>
          <sequence>
            <element maxOccurs="unbounded" minOccurs="0" name="rval" type="tns:SegmentPopulationResults"/>
          </sequence>
        </complexType>
      </element>
      <element name="ApiExceptionFault" type="tns:ApiException">
        <annotation>
          <documentation>
            A fault element of type ApiException.
          </documentation>
        </annotation>
      </element>
      <element name="performSegmentPopulationAction">
        <annotation>
          <documentation>
            Performs an action on the uploads denoted by {@code batchUploadIds}.
          </documentation>
        </annotation>
        <complexType>
          <sequence>
            <element maxOccurs="1" minOccurs="0" name="action" type="tns:SegmentPopulationAction"/>
            <element maxOccurs="unbounded" minOccurs="0"
              name="batchUploadIds" type="xsd:long"/>
          </sequence>
        </complexType>
      </element>
      <element name="performSegmentPopulationActionResponse">
        <complexType>
          <sequence>
            <element maxOccurs="1" minOccurs="0" name="rval" type="tns:UpdateResult"/>
          </sequence>
        </complexType>
      </element>
      <element name="updateSegmentMemberships">
        <annotation>
          <documentation>
            Updates identifiers in an audience segment.
            
            &lt;p&gt;The returned {@link SegmentPopulationRequest#batchUploadId} can be used in subsequent
            requests to group them together as part of the same batch. The identifiers associated with a
            batch will not be processed until {@link #performSegmentPopulationAction} is called with a
            ProcessAction. The batch will expire if ProcessAction is not called within the TTL of 5 days.
          </documentation>
        </annotation>
        <complexType>
          <sequence>
            <element maxOccurs="1" minOccurs="0" name="updateRequest" type="tns:SegmentPopulationRequest"/>
          </sequence>
        </complexType>
      </element>
      <element name="updateSegmentMembershipsResponse">
        <complexType>
          <sequence>
            <element maxOccurs="1" minOccurs="0" name="rval" type="tns:SegmentPopulationResponse"/>
          </sequence>
        </complexType>
      </element>
      <element name="RequestHeader" type="tns:SoapRequestHeader"/>
      <element name="ResponseHeader" type="tns:SoapResponseHeader"/>
    </schema>
  </wsdl:types>
  <wsdl:message name="RequestHeader">
    <wsdl:part element="tns:RequestHeader" name="RequestHeader"/>
  </wsdl:message>
  <wsdl:message name="ResponseHeader">
    <wsdl:part element="tns:ResponseHeader" name="ResponseHeader"/>
  </wsdl:message>
  <wsdl:message name="getSegmentPopulationResultsByIdsRequest">
    <wsdl:part element="tns:getSegmentPopulationResultsByIds" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getSegmentPopulationResultsByIdsResponse">
    <wsdl:part element="tns:getSegmentPopulationResultsByIdsResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="ApiException">
    <wsdl:part element="tns:ApiExceptionFault" name="ApiException"/>
  </wsdl:message>
  <wsdl:message name="performSegmentPopulationActionRequest">
    <wsdl:part element="tns:performSegmentPopulationAction" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="performSegmentPopulationActionResponse">
    <wsdl:part element="tns:performSegmentPopulationActionResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="updateSegmentMembershipsRequest">
    <wsdl:part element="tns:updateSegmentMemberships" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="updateSegmentMembershipsResponse">
    <wsdl:part element="tns:updateSegmentMembershipsResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:portType name="SegmentPopulationServiceInterface">
    <wsdl:operation name="getSegmentPopulationResultsByIds">
      <wsdl:documentation>
        Returns a list of {@link SegmentPopulationResults} for the given {@code batchUploadIds}.
      </wsdl:documentation>
      <wsdl:input message="tns:getSegmentPopulationResultsByIdsRequest" name="getSegmentPopulationResultsByIdsRequest"/>
      <wsdl:output
        message="tns:getSegmentPopulationResultsByIdsResponse" name="getSegmentPopulationResultsByIdsResponse"/>
      <wsdl:fault message="tns:ApiException" name="ApiException"/>
    </wsdl:operation>
    <wsdl:operation name="performSegmentPopulationAction">
      <wsdl:documentation>
        Performs an action on the uploads denoted by {@code batchUploadIds}.
      </wsdl:documentation>
      <wsdl:input message="tns:performSegmentPopulationActionRequest" name="performSegmentPopulationActionRequest"/>
      <wsdl:output message="tns:performSegmentPopulationActionResponse" name="performSegmentPopulationActionResponse"/>
      <wsdl:fault message="tns:ApiException" name="ApiException"/>
    </wsdl:operation>
    <wsdl:operation name="updateSegmentMemberships">
      <wsdl:documentation>
        Updates identifiers in an audience segment.
        
        &lt;p&gt;The returned {@link SegmentPopulationRequest#batchUploadId} can be used in subsequent
        requests to group them together as part of the same batch. The identifiers associated with a
        batch will not be processed until {@link #performSegmentPopulationAction} is called with a
        ProcessAction. The batch will expire if ProcessAction is not called within the TTL of 5 days.
      </wsdl:documentation>
      <wsdl:input message="tns:updateSegmentMembershipsRequest" name="updateSegmentMembershipsRequest"/>
      <wsdl:output message="tns:updateSegmentMembershipsResponse" name="updateSegmentMembershipsResponse"/>
      <wsdl:fault message="tns:ApiException" name="ApiException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="SegmentPopulationServiceSoapBinding" type="tns:SegmentPopulationServiceInterface">
    <wsdlsoap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="getSegmentPopulationResultsByIds">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getSegmentPopulationResultsByIdsRequest">
        <wsdlsoap:header message="tns:RequestHeader"
          part="RequestHeader" use="literal"/>
        <wsdlsoap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSegmentPopulationResultsByIdsResponse">
        <wsdlsoap:header message="tns:ResponseHeader"
          part="ResponseHeader" use="literal"/>
        <wsdlsoap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ApiException">
        <wsdlsoap:fault name="ApiException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="performSegmentPopulationAction">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="performSegmentPopulationActionRequest">
        <wsdlsoap:header message="tns:RequestHeader"
          part="RequestHeader" use="literal"/>
        <wsdlsoap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="performSegmentPopulationActionResponse">
        <wsdlsoap:header message="tns:ResponseHeader"
          part="ResponseHeader" use="literal"/>
        <wsdlsoap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ApiException">
        <wsdlsoap:fault name="ApiException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateSegmentMemberships">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="updateSegmentMembershipsRequest">
        <wsdlsoap:header message="tns:RequestHeader"
          part="RequestHeader" use="literal"/>
        <wsdlsoap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateSegmentMembershipsResponse">
        <wsdlsoap:header message="tns:ResponseHeader"
          part="ResponseHeader" use="literal"/>
        <wsdlsoap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ApiException">
        <wsdlsoap:fault name="ApiException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="SegmentPopulationService">
    <wsdl:port binding="tns:SegmentPopulationServiceSoapBinding" name="SegmentPopulationServiceInterfacePort">
      <wsdlsoap:address location="https://ads.google.com/apis/ads/publisher/v202311/SegmentPopulationService"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>
